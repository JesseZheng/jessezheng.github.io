<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>J.Z&#39;s BLOG</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-07-01T02:11:00.808Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Jesse Zheng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>台湾行-计划记录</title>
    <link href="http://yoursite.com/2019/06/27/%E5%8F%B0%E6%B9%BE%E8%A1%8C-%E8%AE%A1%E5%88%92%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2019/06/27/台湾行-计划记录/</id>
    <published>2019-06-27T12:43:12.000Z</published>
    <updated>2019-07-01T02:11:00.808Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><blockquote><p><strong>两签一注（台湾通行证+个人旅游G签注+入台证）</strong></p></blockquote><ul><li>台湾通行证+签注（需要一周）：出在入境办事大厅办理</li><li>入台证（需要一周）：在淘宝飞猪上自助购买或者找旅行社，前提是有台湾通行证及签注</li></ul><blockquote><p><strong>机票</strong></p></blockquote><ul><li>提前看机票，飞猪，旅游旺季机票特别贵</li></ul><blockquote><p><strong>交通工具</strong></p></blockquote><ul><li>悠游卡（捷运，公交等交通工具通用）</li><li>火车票（高铁或台铁）</li><li>拼车</li></ul><h2 id="台湾环岛路线规划（11天10晚）"><a href="#台湾环岛路线规划（11天10晚）" class="headerlink" title="台湾环岛路线规划（11天10晚）"></a>台湾环岛路线规划（11天10晚）</h2><ul><li><p><u>7月23日</u> 出发 <strong>上海虹桥</strong>-&gt;<strong>台北松山</strong> </p></li><li><p><u>8月2日</u> 返回 <strong>台北松山</strong>-&gt;<strong>上海虹桥</strong></p></li><li><p>环岛路线参考了马蜂窝上的攻略-<a href="https://www.mafengwo.cn/i/8736126.html" target="_blank" rel="noopener">台湾10天9夜顺时针环岛自由行攻略</a></p><img src="/2019/06/27/台湾行-计划记录/route.jpg" class="路线图" title="路线图"></li><li><p>台北 - 花莲 - 垦丁 - 高雄 - 台中 - 台北</p></li></ul><h2 id="Day1-·-7-23-台北"><a href="#Day1-·-7-23-台北" class="headerlink" title="Day1 · 7.23 - 台北"></a>Day1 · 7.23 - 台北</h2><ul><li>台北象山观光</li><li>台北101</li><li>西门町</li><li>宁夏夜市，士林夜市</li><li><strong>住宿</strong>：台北</li></ul><h2 id="Day2-·-7-24-平溪一日游"><a href="#Day2-·-7-24-平溪一日游" class="headerlink" title="Day2 · 7.24 - 平溪一日游"></a>Day2 · 7.24 - 平溪一日游</h2><ul><li>台北车站 - 瑞芳站 - 平溪线 - 九份</li><li>十分放天灯</li><li>猫村猴硐</li><li>九份老街</li><li><strong>住宿</strong>：台北</li></ul><h2 id="Day3-·-7-25-淡水-gt-前往花莲"><a href="#Day3-·-7-25-淡水-gt-前往花莲" class="headerlink" title="Day3 · 7.25 - 淡水 -&gt; 前往花莲"></a>Day3 · 7.25 - 淡水 -&gt; 前往花莲</h2><ul><li>淡水中学（不能说的秘密）</li><li>渔人码头</li><li>淡水老街</li><li><strong>住宿</strong>：花莲</li></ul><h2 id="Day4-·-7-26-花莲一日游"><a href="#Day4-·-7-26-花莲一日游" class="headerlink" title="Day4 · 7.26 - 花莲一日游"></a>Day4 · 7.26 - 花莲一日游</h2><ul><li><strong>住宿</strong>：花莲</li></ul><h2 id="Day5-·-7-27-花莲-gt-前往垦丁"><a href="#Day5-·-7-27-花莲-gt-前往垦丁" class="headerlink" title="Day5 · 7.27 - 花莲 -&gt; 前往垦丁"></a>Day5 · 7.27 - 花莲 -&gt; 前往垦丁</h2><ul><li><strong>住宿</strong>：垦丁</li></ul><h2 id="Day6-·-7-28-垦丁一日游"><a href="#Day6-·-7-28-垦丁一日游" class="headerlink" title="Day6 · 7.28 - 垦丁一日游"></a>Day6 · 7.28 - 垦丁一日游</h2><ul><li><strong>住宿</strong>：垦丁</li></ul><h2 id="Day7-·-7-29-垦丁-gt-高雄"><a href="#Day7-·-7-29-垦丁-gt-高雄" class="headerlink" title="Day7 · 7.29 - 垦丁 -&gt; 高雄"></a>Day7 · 7.29 - 垦丁 -&gt; 高雄</h2><ul><li><strong>住宿</strong>：高雄</li></ul><h2 id="Day8-·-7-30-高雄-gt-台中"><a href="#Day8-·-7-30-高雄-gt-台中" class="headerlink" title="Day8 · 7.30 - 高雄 - &gt; 台中"></a>Day8 · 7.30 - 高雄 - &gt; 台中</h2><ul><li>逢甲夜市</li><li><strong>住宿</strong>：台中</li></ul><h2 id="Day9-·-7-31-阿里山"><a href="#Day9-·-7-31-阿里山" class="headerlink" title="Day9 · 7.31 - 阿里山"></a>Day9 · 7.31 - 阿里山</h2><ul><li><strong>住宿</strong>：台中</li></ul><h2 id="Day10-·-8-1-日月潭"><a href="#Day10-·-8-1-日月潭" class="headerlink" title="Day10 · 8.1 - 日月潭"></a>Day10 · 8.1 - 日月潭</h2><ul><li><strong>住宿</strong>：台中</li></ul><h2 id="Day11-·-8-2-台中-gt-台北"><a href="#Day11-·-8-2-台中-gt-台北" class="headerlink" title="Day11 · 8.2 - 台中 -&gt; 台北"></a>Day11 · 8.2 - 台中 -&gt; 台北</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前期准备&quot;&gt;&lt;a href=&quot;#前期准备&quot; class=&quot;headerlink&quot; title=&quot;前期准备&quot;&gt;&lt;/a&gt;前期准备&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;两签一注（台湾通行证+个人旅游G签注+入台证）&lt;/strong&gt;&lt;/p&gt;
&lt;/bl
      
    
    </summary>
    
      <category term="旅行" scheme="http://yoursite.com/categories/%E6%97%85%E8%A1%8C/"/>
    
    
      <category term="台湾" scheme="http://yoursite.com/tags/%E5%8F%B0%E6%B9%BE/"/>
    
  </entry>
  
  <entry>
    <title>SSE-LECTURE2-TRUESEC</title>
    <link href="http://yoursite.com/2019/01/30/SSE-LECTURE2-TRUESEC/"/>
    <id>http://yoursite.com/2019/01/30/SSE-LECTURE2-TRUESEC/</id>
    <published>2019-01-30T01:19:10.000Z</published>
    <updated>2019-01-30T10:35:25.177Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Validation"><a href="#Validation" class="headerlink" title="Validation"></a>Validation</h3><ul><li><strong>always</strong> prefer white listing, before black listing</li><li><strong>always</strong> prefer strict validation</li><li>normaliztion and sanitation is for edge cases only!</li></ul><h3 id="Untrusted-Pattern"><a href="#Untrusted-Pattern" class="headerlink" title="Untrusted Pattern"></a>Untrusted Pattern</h3><ul><li>highlight the trust boundary</li><li>less intrusive to existing code</li></ul><h3 id="Implementation-Immutability"><a href="#Implementation-Immutability" class="headerlink" title="Implementation - Immutability"></a>Implementation - Immutability</h3><ul><li>Drastically reduce the risk of TOCTTOU problems</li><li>Increases readability</li><li>Increases parallelism</li><li>Increases event sourcing</li></ul><h3 id="Implementation-Pessimistic-Strategy"><a href="#Implementation-Pessimistic-Strategy" class="headerlink" title="Implementation - Pessimistic Strategy"></a>Implementation - Pessimistic Strategy</h3><h3 id="Implementation-Isolate-risks"><a href="#Implementation-Isolate-risks" class="headerlink" title="Implementation - Isolate risks"></a>Implementation - Isolate risks</h3><ul><li>compartmentalize sensitive operations</li><li>Risk separation: Parsing of certain formats(XML), consider external dependencies</li><li>Security testing</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Validation&quot;&gt;&lt;a href=&quot;#Validation&quot; class=&quot;headerlink&quot; title=&quot;Validation&quot;&gt;&lt;/a&gt;Validation&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;always&lt;/strong&gt; prefer w
      
    
    </summary>
    
      <category term="学习" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Secure Software Engineering" scheme="http://yoursite.com/tags/Secure-Software-Engineering/"/>
    
  </entry>
  
  <entry>
    <title>SSE-Ethics</title>
    <link href="http://yoursite.com/2019/01/28/SSE-Ethics/"/>
    <id>http://yoursite.com/2019/01/28/SSE-Ethics/</id>
    <published>2019-01-28T02:35:24.000Z</published>
    <updated>2019-01-28T11:18:38.778Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Technology"><a href="#Technology" class="headerlink" title="Technology"></a>Technology</h3><ul><li>Technology good, evil or neutral? <ul><li>The effect of tech; damage effects </li><li>Classification</li></ul></li><li>Technology development <strong>inevitable</strong></li><li>Resistance and political control</li></ul><a id="more"></a><h3 id="Netiquette"><a href="#Netiquette" class="headerlink" title="Netiquette"></a>Netiquette</h3><ul><li>write shortly</li><li>……</li></ul><h3 id="The-engineer"><a href="#The-engineer" class="headerlink" title="The engineer"></a>The engineer</h3><ul><li>From slave/military to civil engineer in society</li><li>Professional ethics in addition to a general ethics<ul><li>Social roles with moral obligations</li><li>Occuaptional-specific ethical problems </li></ul></li><li>Respinsibility <ul><li>task responsibilities - to get things done</li><li>debt responsibilities - who to blame</li><li>ambient(环境) responsibility</li></ul></li></ul><h3 id="Loyalty-and-ethical-codes"><a href="#Loyalty-and-ethical-codes" class="headerlink" title="Loyalty and ethical codes"></a>Loyalty and ethical codes</h3><ul><li>the limits of loyalty vs environmental / safety reuquirements</li><li>misguided loyalty</li><li>“whistle-blower”</li></ul><h3 id="Engineering-codes"><a href="#Engineering-codes" class="headerlink" title="Engineering codes"></a>Engineering codes</h3><ul><li>to be filled</li></ul><h3 id="Ethics-for-developers"><a href="#Ethics-for-developers" class="headerlink" title="Ethics for developers"></a>Ethics for developers</h3><ul><li>contribute to society and hume welfare</li><li>avoid damging other - coding errors, security issues, follow standards design and test</li><li>honest and trustworthy - admit your limitaions and report potential risks</li><li>give credit to the author</li><li>respect the privavy of others</li><li>be sure of confidentiality</li></ul><h3 id="Technology-Assessment"><a href="#Technology-Assessment" class="headerlink" title="Technology Assessment"></a>Technology Assessment</h3><ul><li>detect future consequences of new technology in advance<ul><li>medical technology evaluation</li><li>environmental impact assessment</li><li>risk analysis</li></ul></li></ul><h3 id="Assignment"><a href="#Assignment" class="headerlink" title="Assignment"></a>Assignment</h3><ul><li>1-2 pages</li><li>single spacing, 12-14 font size</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Technology&quot;&gt;&lt;a href=&quot;#Technology&quot; class=&quot;headerlink&quot; title=&quot;Technology&quot;&gt;&lt;/a&gt;Technology&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Technology good, evil or neutral? &lt;ul&gt;
&lt;li&gt;The effect of tech; damage effects &lt;/li&gt;
&lt;li&gt;Classification&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Technology development &lt;strong&gt;inevitable&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Resistance and political control&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="学习" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Secure Software Engineering" scheme="http://yoursite.com/tags/Secure-Software-Engineering/"/>
    
  </entry>
  
  <entry>
    <title>Simple HTTP webserver</title>
    <link href="http://yoursite.com/2018/11/04/Simple-HTTP-webserver/"/>
    <id>http://yoursite.com/2018/11/04/Simple-HTTP-webserver/</id>
    <published>2018-11-04T06:54:41.000Z</published>
    <updated>2018-11-09T19:33:21.237Z</updated>
    
    <content type="html"><![CDATA[<p>Github: <a href="https://github.com/JesseZheng/TinyServer" target="_blank" rel="noopener">TinyServer</a></p><a id="more"></a><h2 id="Socket"><a href="#Socket" class="headerlink" title="Socket"></a>Socket</h2><h2 id="Bind"><a href="#Bind" class="headerlink" title="Bind"></a>Bind</h2><h2 id="Listen"><a href="#Listen" class="headerlink" title="Listen"></a>Listen</h2><h2 id="Accept"><a href="#Accept" class="headerlink" title="Accept"></a>Accept</h2><h2 id="Fork"><a href="#Fork" class="headerlink" title="Fork"></a>Fork</h2><h2 id="Deamon-process"><a href="#Deamon-process" class="headerlink" title="Deamon process"></a>Deamon process</h2><hr><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p> <a href="https://www.cnblogs.com/skynet/archive/2010/12/12/1903949.html" target="_blank" rel="noopener">Linux Socket编程</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Github: &lt;a href=&quot;https://github.com/JesseZheng/TinyServer&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;TinyServer&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="学习" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
      <category term="http-webserver" scheme="http://yoursite.com/tags/http-webserver/"/>
    
  </entry>
  
  <entry>
    <title>shell命令自查</title>
    <link href="http://yoursite.com/2018/09/13/shell%E5%91%BD%E4%BB%A4%E8%87%AA%E6%9F%A5/"/>
    <id>http://yoursite.com/2018/09/13/shell命令自查/</id>
    <published>2018-09-13T07:06:04.000Z</published>
    <updated>2018-11-03T14:22:28.135Z</updated>
    
    <content type="html"><![CDATA[<ul><li>getopts</li><li>grep &amp;&amp; egrep</li><li>$读取命令行参数</li><li>chmod</li><li>sort</li><li>uniq</li><li>wc </li><li>cut</li></ul><a id="more"></a><blockquote><h3 id="getopts"><a href="#getopts" class="headerlink" title="getopts"></a>getopts</h3></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">while</span> <span class="built_in">getopts</span> <span class="string">"a:b:cdef"</span> opt; <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">case</span> <span class="variable">$opt</span> <span class="keyword">in</span></span><br><span class="line">    a)</span><br><span class="line">      <span class="built_in">echo</span> <span class="string">"this is -a the arg is ! <span class="variable">$OPTARG</span>"</span> </span><br><span class="line">      ;;</span><br><span class="line">    b)</span><br><span class="line">      <span class="built_in">echo</span> <span class="string">"this is -b the arg is ! <span class="variable">$OPTARG</span>"</span> </span><br><span class="line">      ;;</span><br><span class="line">    c)</span><br><span class="line">      <span class="built_in">echo</span> <span class="string">"this is -c the arg is ! <span class="variable">$OPTARG</span>"</span> </span><br><span class="line">      ;;</span><br><span class="line">    \?)</span><br><span class="line">      <span class="built_in">echo</span> <span class="string">"Invalid option: -<span class="variable">$OPTARG</span>"</span> </span><br><span class="line">      ;;</span><br><span class="line">  <span class="keyword">esac</span></span><br></pre></td></tr></table></figure><p>getopts的使用形式是：<code>getopts option_string variable</code></p><p>getopts一共有两个参数，<code>test.sh -a hello</code>第一个是<code>-a</code>这样的选项，第二个参数是 <code>hello</code>这样的参数。</p><p>option_string之间可以直接相连，把<code>:</code>加在某个选项后面表示这个选项必须带有参数</p><p> 例如：<code>getopts ahfvc: option</code>表明选项a、h、f、v可以不加实际值进行传递，而选项c必须取值。使用选项取值时，必须使用变量<strong>OPTARG</strong>保存该值。</p><blockquote><h3 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h3></blockquote><p> <strong>grep命令使用正则表达式来搜索文本，并且把匹配的文本打印出来</strong>。</p><p>grep [options]pattern [file]</p><p>option表示选项，pattern表示匹配的模式。file表示一系列文件名。</p><p>常用选项：</p><p>-c  只打印匹配的文本行的函数，不显示文本内容。</p><p>-i   匹配时忽略字母大小写</p><p>-h  当搜索多个文件，不显示匹配文件名前缀。</p><p>-l   只列出含义匹配的文本行的文件的文件名，不显示其具体匹配的内容。</p><p>-n  列出所有匹配的文本行，并显示行号</p><p>-s   不显示关于不存在或无法读取文件的错误信息</p><p>-v   只显示不匹配的文本行。</p><p>-w  匹配整个单词</p><p>-x   匹配整个文本行</p><p>-r   递归搜索，不仅搜索当前目录，还有各级子目录</p><p><strong>-q   用于if逻辑判断</strong></p><p>-q 参数，本意是 Quiet; do not write anything to standard output.  Exit immediately with zero status if any match is found, even if an error was detected.   中文意思为，安静模式，不打印任何标准输出。如果有匹配的内容则立即返回状态值0。</p><p><strong><u>正则表达式</u></strong></p><p><strong>1）行首定位符 “^”</strong></p><p>用来匹配行首的字符。表示行首的字符是^后面的那个字符。</p><p>行首定位符位于所作用的字符之前</p><p>例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#列出/etc目录中的以字母po开头的文件名</span></span><br><span class="line">str=`ls /etc | grep <span class="string">"^po"</span>`</span><br><span class="line"><span class="built_in">echo</span><span class="string">"<span class="variable">$str</span>"</span></span><br></pre></td></tr></table></figure><p> <strong>2）行尾定位符”$”</strong></p><p>作用：定位文本行的末尾。</p><p>行尾定位符位于所作用的字符之后。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#列出/etc目录中以conf结尾的文件名</span></span><br><span class="line">str=`ls /etc | grep <span class="string">"conf$"</span>`</span><br><span class="line"><span class="built_in">echo</span><span class="string">"<span class="variable">$str</span>"</span></span><br></pre></td></tr></table></figure><p>精确匹配一个文本行：<code>^cat$</code> 完全匹配cat的文本行</p><p><code>^$</code>:匹配所有空行</p><p>单独的^和$没有任何意义，因为任何一个文本行都有开头和结尾。</p><p> <strong>3）单个字符匹配”.”</strong></p><p>圆点<code>.</code>用来匹配任意单个字符。包括空格，但不包括换行符\n。当使用<code>.</code>后，意味着该位置一定有一个字符，无论他是什么字符。</p><p>(可以连续使用..来匹配多个字符，如l..p，匹配含义字母l，然后是两个任意字符，再接着是字母p的字符串)   </p><p><strong>4） 限定符“*”</strong></p><p>限定符本身不代表任何字符，用来指定其前面的一个字符必须重复出现多次才能满足匹配。而星号表示匹配其前导字符的任意次数，包括0次。</p><p><strong>5） 字符集匹配“[]”</strong></p><p>只要某个字符串在方括号所在的位置上出现了方括号中的任意一个字符，就满足匹配规则。</p><p>对于连续的数字或字母，可使用连字符-来表示一个范围。</p><p>如：[a-f]表示匹配a到f中的任意一个字母</p><p>[0-9]匹配任意单个数字</p><p> <strong>6）字符集不匹配“[^]”</strong></p><blockquote><h3 id="egrep"><a href="#egrep" class="headerlink" title="egrep"></a>egrep</h3></blockquote><p>(egrep命令默认使用扩展正则表达式)</p><p><strong>1 ）限定符“+”</strong></p><p>“+”限定前面的字符至少出现一次。</p><p>#筛选以字符串“ss”开头，后面至少紧跟着1个字符“s”的文本行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#筛选以字符串“ss”开头，后面至少紧跟着1个字符“s”的文本行</span></span><br><span class="line">str=ls /etc | egrep <span class="string">"^sss+"</span></span><br><span class="line"><span class="built_in">echo</span><span class="string">"<span class="variable">$str</span>"</span></span><br></pre></td></tr></table></figure><p>结果：sssd</p><p> <strong>2）限定符“？”</strong></p><p>限定前面的字符最多只出现一次。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#筛选以字符串“ss”开头，后面跟着0或者1个s的文本行</span></span><br><span class="line">str=ls /etc |egrep <span class="string">"^sss?"</span></span><br><span class="line"><span class="built_in">echo</span><span class="string">"<span class="variable">$str</span>"</span></span><br></pre></td></tr></table></figure><p>结果：ssh,ssl,sssd</p><p> <strong>3）竖线“|”和圆括号“()”</strong></p><p>竖线|表示多个正则表达式之前或的关系</p><p>圆括号表示一组可选值得集合。</p><p>竖线和圆括号经常一起使用，表示一组可选值。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#筛选含有字符串“ssh”、“ssl”或者以字符串“yum”开头的文本行</span></span><br><span class="line">str=ls /etc |egrep <span class="string">"(ssh|ssl|^yum)"</span></span><br><span class="line"><span class="built_in">echo</span><span class="string">"<span class="variable">$str</span>"</span></span><br></pre></td></tr></table></figure><blockquote><h3 id="读取命令行参数"><a href="#读取命令行参数" class="headerlink" title="$读取命令行参数"></a>$读取命令行参数</h3></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#all params 全部参数</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$@</span></span><br><span class="line"><span class="comment">#all params  全部参数</span></span><br><span class="line"><span class="built_in">echo</span> $*</span><br><span class="line"><span class="comment">#length of params 参数的长度</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$#</span></span><br><span class="line"><span class="comment">#first param 第一个参数</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$1</span></span><br><span class="line"><span class="comment">#last param 最后一个参数</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;@:$&#123;#@&#125;</span>&#125;</span><br><span class="line"><span class="comment">#last 2 param 最后两个参数</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;@:$&#123;#@&#125;</span>-1&#125;</span><br><span class="line"><span class="comment">#last 2nd param 倒数第二个参数</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;@:$&#123;#@&#125;</span>-1:1&#125;</span><br><span class="line"><span class="comment">#from 2nd to last param 从第二个到最后一个参数</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;@:2&#125;</span></span><br><span class="line"><span class="comment">#from 2nd, count 2 从第2个参数开始，连续2个参数</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;@:2:2&#125;</span></span><br></pre></td></tr></table></figure><blockquote><h3 id="chmod"><a href="#chmod" class="headerlink" title="chmod"></a>chmod</h3></blockquote><p>chmod [可选项]  <mode>  &lt;file…&gt;</mode></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">可选项：</span><br><span class="line">  -c, --changes          like verbose but report only when a change is made (若该档案权限确实已经更改，才显示其更改动作)</span><br><span class="line">  -f, --silent, --quiet  suppress most error messages  （若该档案权限无法被更改也不要显示错误讯息）</span><br><span class="line">  -v, --verbose          output a diagnostic <span class="keyword">for</span> every file processed（显示权限变更的详细资料）</span><br><span class="line">       --no-preserve-root  <span class="keyword">do</span> not treat <span class="string">'/'</span> specially (the default)</span><br><span class="line">       --preserve-root    fail to operate recursively on <span class="string">'/'</span></span><br><span class="line">       --reference=RFILE  use RFILE‘s mode instead of MODE values</span><br><span class="line">  -R, --recursive        change files and directories recursively （以递归的方式对目前目录下的所有档案与子目录进行相同的权限变更)</span><br><span class="line">       --<span class="built_in">help</span>显示此帮助信息</span><br><span class="line">       --version显示版本信息</span><br><span class="line">mode ：</span><br><span class="line">权限设定字串，详细格式如下 ：</span><br><span class="line">[ugoa...][[+-=][rwxX]...][,...]，</span><br><span class="line"> </span><br><span class="line">其中</span><br><span class="line">[ugoa...]</span><br><span class="line">u 表示该档案的拥有者，g 表示与该档案的拥有者属于同一个群体(group)者，o 表示其他以外的人，a 表示所有（包含上面三者）。</span><br><span class="line">[+-=]</span><br><span class="line">+ 表示增加权限，- 表示取消权限，= 表示唯一设定权限。</span><br><span class="line">[rwxX]</span><br><span class="line">r 表示可读取，w 表示可写入，x 表示可执行，X 表示只有当该档案是个子目录或者该档案已经被设定过为可执行。</span><br><span class="line"> </span><br><span class="line">file...</span><br><span class="line">文件列表（单个或者多个文件、文件夹）</span><br></pre></td></tr></table></figure><h4 id="数字权限使用格式"><a href="#数字权限使用格式" class="headerlink" title="数字权限使用格式"></a><strong>数字权限使用格式</strong></h4><p>在这种使用方式中，首先我们需要了解数字如何表示权限。 首先，我们规定 数字 4 、2 和 1表示读、写、执行权限（具体原因可见下节权限详解内容），即 r=4，w=2，x=1 。此时其他的权限组合也可以用其他的八进制数字表示出来，如： rwx = 4 + 2 + 1 = 7 rw = 4 + 2 = 6 rx = 4 +1 = 5 即</p><p>若要同时设置 rwx (可读写运行） 权限则将该权限位 设置 为 4 + 2 + 1 = 7 若要同时设置 rw- （可读写不可运行）权限则将该权限位 设置 为 4 + 2 = 6 若要同时设置 r-x （可读可运行不可写）权限则将该权限位 设置 为 4 +1 = 5</p><p>上面我们提到，每个文件都可以针对三个粒度，设置不同的rwx(读写执行)权限。即我们可以用用三个8进制数字分别表示 拥有者 、群组 、其它组( u、 g 、o)的权限详情，并用chmod直接加三个8进制数字的方式直接改变文件权限。语法格式为 ：<code>chmod &lt;abc&gt; file...</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">其中</span><br><span class="line">a,b,c各为一个数字，分别代表User、Group、及Other的权限。</span><br><span class="line">相当于简化版的</span><br><span class="line">chmod u=权限,g=权限,o=权限 file...</span><br><span class="line">而此处的权限将用8进制的数字来表示User、Group、及Other的读、写、执行权限</span><br></pre></td></tr></table></figure><p>范例：</p><ul><li>设置所有人可以读写及执行</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 file  (等价于  chmod u=rwx,g=rwx,o=rwx file 或  chmod a=rwx file)</span><br></pre></td></tr></table></figure><ul><li>设置拥有者可读写，其他人不可读写执行</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 600 file (等价于  chmod u=rw,g=---,o=--- file 或 chmod u=rw,go-rwx file )</span><br></pre></td></tr></table></figure><p>常见的权限表示形式有：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">-rw------- (600)      只有拥有者有读写权限。</span><br><span class="line">-rw-r--r-- (644)      只有拥有者有读写权限；而属组用户和其他用户只有读权限。</span><br><span class="line">-rwx------ (700)     只有拥有者有读、写、执行权限。</span><br><span class="line">-rwxr-xr-x (755)    拥有者有读、写、执行权限；而属组用户和其他用户只有读、执行权限。</span><br><span class="line">-rwx--x--x (711)    拥有者有读、写、执行权限；而属组用户和其他用户只有执行权限。</span><br><span class="line">-rw-rw-rw- (666)   所有用户都有文件读、写权限。</span><br><span class="line">-rwxrwxrwx (777)  所有用户都有读、写、执行权限。</span><br><span class="line"></span><br><span class="line"><span class="comment"># 实际上，后九位每个位置的意义（代表某个属组的某个权限）都是固定的，如果我们将各个位置权限的有无用二进制数 1和 0来代替，则只读、只写、只执行权限，可以用三位二进制数表示为</span></span><br><span class="line">r-- = 100</span><br><span class="line">-w- = 010</span><br><span class="line">--x = 001</span><br><span class="line">--- = 000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 实际上，我们可以将所有的权限用二进制形式表现出来，并进一步转变成八进制数字</span></span><br><span class="line">rwx = 111 = 7</span><br><span class="line">rw- = 110 = 6</span><br><span class="line">r-x = 101 = 5</span><br><span class="line">r-- = 100 = 4</span><br><span class="line">-wx = 011 = 3</span><br><span class="line">-w- = 010 = 2</span><br><span class="line">--x = 001 = 1</span><br><span class="line">--- = 000 = 0</span><br><span class="line"></span><br><span class="line">-rw------- =  600</span><br><span class="line">-rw-rw-rw- =  666</span><br><span class="line">-rwxrwxrwx = 777</span><br></pre></td></tr></table></figure><p><strong>关于第一位最高位的解释</strong>： 上面我们说到了权限表示中后九位的含义，剩下的第一位代表的是文件的类型，类型可以是下面几个中的一个：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">d代表的是目录(directroy)</span><br><span class="line">-代表的是文件(regular file)</span><br><span class="line">s代表的是套字文件(socket)</span><br><span class="line">p代表的管道文件(pipe)或命名管道文件(named pipe)</span><br><span class="line">l代表的是符号链接文件(symbolic link)</span><br><span class="line">b代表的是该文件是面向块的设备文件(block-oriented device file)</span><br><span class="line">c代表的是该文件是面向字符的设备文件(charcter-oriented device file)</span><br></pre></td></tr></table></figure><blockquote><h3 id="sort"><a href="#sort" class="headerlink" title="sort"></a>sort</h3></blockquote><p><strong>1) sort的工作原理</strong></p><p>sort将文件的每一行作为一个单位，相互比较，比较原则是从首字符向后，依次按ASCII码值进行比较，最后将他们按升序输出。</p><p><strong>2) sort的-u选项</strong></p><p>输出行中去除重复行。</p><p><strong>3) sort的-r选项</strong> </p><p>sort默认的排序方式是升序，如果想改成降序，就加个-r就搞定了。</p><p><strong>4) sort的-o选项</strong></p><p>由于sort默认是把结果输出到标准输出，所以需要用重定向才能将结果写入文件，形如sort filename &gt; newfile。</p><p>但是，如果你想把排序结果输出到原文件中，用重定向可就不行了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[rocrocket@rocrocket programming]$ sort -r number.txt &gt; number.txt</span><br><span class="line">[rocrocket@rocrocket programming]$ cat number.txt</span><br><span class="line">[rocrocket@rocrocket programming]$</span><br></pre></td></tr></table></figure><p>看，竟然将number清空了。</p><p>就在这个时候，-o选项出现了，它成功的解决了这个问题，让你放心的将结果写入原文件。这或许也是-o比重定向的唯一优势所在。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[rocrocket@rocrocket programming]$ sort -r number.txt -o number.txt</span><br><span class="line">[rocrocket@rocrocket programming]$ cat number.txt</span><br><span class="line">5</span><br><span class="line">4</span><br><span class="line">3</span><br><span class="line">2</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p><strong>5) sort的-n选项</strong></p><p>你有没有遇到过10比2小的情况。我反正遇到过。出现这种情况是由于排序程序将这些数字按字符来排序了，排序程序会先比较1和2，显然1小，所以就将10放在2前面喽。这也是sort的一贯作风。</p><p>我们如果想改变这种现状，就要使用-n选项，来告诉sort，“要以数值来排序”！</p><p><strong>6) sort的-t选项和-k选项</strong></p><p>如果有一个文件的内容是这样：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[rocrocket@rocrocket programming]$ cat facebook.txt</span><br><span class="line">banana:30:5.5</span><br><span class="line">apple:10:2.5</span><br><span class="line">pear:90:2.3</span><br><span class="line">orange:20:3.4</span><br></pre></td></tr></table></figure><p>这个文件有三列，列与列之间用冒号隔开了，第一列表示水果类型，第二列表示水果数量，第三列表示水果价格。</p><p>那么我想以水果数量来排序，也就是以第二列来排序，如何利用sort实现？</p><p>幸好，sort提供了-t选项，后面可以设定间隔符。（是不是想起了cut和paste的-d选项，共鸣～～）</p><p>指定了间隔符之后，就可以用-k来指定列数了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[rocrocket@rocrocket programming]$ sort -n -k 2 -t : facebook.txt</span><br><span class="line">apple:10:2.5</span><br><span class="line">orange:20:3.4</span><br><span class="line">banana:30:5.5</span><br><span class="line">pear:90:2.3</span><br></pre></td></tr></table></figure><p>我们使用冒号作为间隔符，并针对第二列来进行数值升序排序，结果很令人满意。</p><blockquote><h3 id="uniq"><a href="#uniq" class="headerlink" title="uniq"></a>uniq</h3></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">用法：uniq [选项]... [文件]  </span><br><span class="line">从输入文件或者标准输入中筛选相邻的匹配行并写入到输出文件或标准输出。  </span><br><span class="line">不附加任何选项时匹配行将在首次出现处被合并。   </span><br><span class="line">长选项必须使用的参数对于短选项时也是必需使用的。  </span><br><span class="line"> -c, --count              //在每行前加上表示相应行目出现次数的前缀编号  </span><br><span class="line"> -d, --repeated          //只输出重复的行  </span><br><span class="line"> -D, --all-repeated      //只输出重复的行，不过有几行输出几行  </span><br><span class="line"> -f, --skip-fields=N     //-f 忽略的段数，-f 1 忽略第一段  </span><br><span class="line"> -i, --ignore-case       //不区分大小写  </span><br><span class="line"> -s, --skip-chars=N      //根-f有点像，不过-s是忽略，后面多少个字符 -s 5就忽略后面5个字符  </span><br><span class="line"> -u, --unique            //去除重复的后，全部显示出来，根mysql的distinct功能上有点像  </span><br><span class="line"> -z, --zero-terminated   end lines with 0 byte, not newline  </span><br><span class="line"> -w, --check-chars=N      //对每行第N 个字符以后的内容不作对照  </span><br><span class="line"> --<span class="built_in">help</span>              //显示此帮助信息并退出  </span><br><span class="line"> --version              //显示版本信息并退出</span><br></pre></td></tr></table></figure><blockquote><h3 id="wc"><a href="#wc" class="headerlink" title="wc"></a>wc</h3></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wc [-clw][--<span class="built_in">help</span>][--version][文件...]</span><br></pre></td></tr></table></figure><ul><li>-c或–bytes或–chars 只显示Bytes数。</li><li>-l或–lines 只显示行数。</li><li>-w或–words 只显示字数。</li><li>–help 在线帮助。</li><li>–version 显示版本信息。</li></ul><blockquote><h3 id="cut"><a href="#cut" class="headerlink" title="cut"></a>cut</h3></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cut -c -b -f -d -s</span><br></pre></td></tr></table></figure><ul><li><p>-c character</p></li><li><p>-b byte</p></li><li><p>-f field</p></li><li><p>-d delimiter分隔符</p></li><li><p>　-c 和 -f 参数可以跟以下子参数：</p><p>　　<strong>N 第N个字符或字段</strong></p><p>　　<strong>N- 从第一个字符或字段到文件结束</strong></p><p>　　<strong>N-M 从第N个到第M个字符或字段</strong></p><p>　　<strong>-M 从第一个到第N个字符或字段</strong> </p></li></ul><hr><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://blog.csdn.net/xluren/article/details/17489667" target="_blank" rel="noopener">shell getopts 用法</a></p><p><a href="http://roclinux.cn/?p=1350" target="_blank" rel="noopener">《sort帮你排序》-linux命令五分钟系列之二十六 作者 roc)</a></p><p><a href="https://blog.csdn.net/u013197629/article/details/73608613" target="_blank" rel="noopener">Linux权限详解（chmod、600、644、666、700、711、755、777、4755、6755、7755）</a></p><p><a href="https://blog.csdn.net/qq504196282/article/details/52995198" target="_blank" rel="noopener">shell之正则表达式</a></p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;getopts&lt;/li&gt;
&lt;li&gt;grep &amp;amp;&amp;amp; egrep&lt;/li&gt;
&lt;li&gt;$读取命令行参数&lt;/li&gt;
&lt;li&gt;chmod&lt;/li&gt;
&lt;li&gt;sort&lt;/li&gt;
&lt;li&gt;uniq&lt;/li&gt;
&lt;li&gt;wc &lt;/li&gt;
&lt;li&gt;cut&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="学习" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="shell" scheme="http://yoursite.com/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>【教程】CPH机场购买前往Karlskrona的火车票</title>
    <link href="http://yoursite.com/2018/09/07/CPH%E8%B4%AD%E4%B9%B0%E5%89%8D%E5%BE%80Karlskrona%E7%9A%84%E7%81%AB%E8%BD%A6%E7%A5%A8/"/>
    <id>http://yoursite.com/2018/09/07/CPH购买前往Karlskrona的火车票/</id>
    <published>2018-09-07T04:56:31.000Z</published>
    <updated>2018-09-07T11:52:49.180Z</updated>
    
    <content type="html"><![CDATA[<p>…………</p><a id="more"></a><h4 id="从机场取好行李，然后出口"><a href="#从机场取好行李，然后出口" class="headerlink" title="从机场取好行李，然后出口"></a>从机场取好行李，然后出口</h4><img src="/2018/09/07/CPH购买前往Karlskrona的火车票/1.JPG" class="出口" title="图一"><h4 id="找到前往Sweden的火车票购票机器-不是图一右边的购票机器！是左边的机器，上面写前往Sweden"><a href="#找到前往Sweden的火车票购票机器-不是图一右边的购票机器！是左边的机器，上面写前往Sweden" class="headerlink" title="找到前往Sweden的火车票购票机器(不是图一右边的购票机器！是左边的机器，上面写前往Sweden)"></a>找到前往Sweden的火车票购票机器(不是图一右边的购票机器！<em><u><strong>是左边的机器，上面写前往Sweden</strong></u></em>)</h4><img src="/2018/09/07/CPH购买前往Karlskrona的火车票/2.JPG" class="购票机" title="购票机"><h4 id="Step1-Destination选择Karlskrona"><a href="#Step1-Destination选择Karlskrona" class="headerlink" title="Step1 - Destination选择Karlskrona"></a>Step1 - Destination选择Karlskrona</h4><img src="/2018/09/07/CPH购买前往Karlskrona的火车票/3.JPG" class="购票机" title="Karlskrona"><h4 id="Step2-选择over-the-bridge"><a href="#Step2-选择over-the-bridge" class="headerlink" title="Step2 - 选择over the bridge"></a>Step2 - 选择over the bridge</h4><img src="/2018/09/07/CPH购买前往Karlskrona的火车票/4.JPG" class="购票机" title="over the bridge"><h4 id="Step3-支付方式credit"><a href="#Step3-支付方式credit" class="headerlink" title="Step3 - 支付方式credit"></a>Step3 - 支付方式credit</h4><img src="/2018/09/07/CPH购买前往Karlskrona的火车票/5.JPG" class="购票机" title="credit"><h4 id="Step4-票的类型可以选family（2人票）便宜一些，如果人数是单数的话一个人选adult"><a href="#Step4-票的类型可以选family（2人票）便宜一些，如果人数是单数的话一个人选adult" class="headerlink" title="Step4 - 票的类型可以选family（2人票）便宜一些，如果人数是单数的话一个人选adult"></a>Step4 - 票的类型可以选family（2人票）便宜一些，如果人数是单数的话一个人选adult</h4><img src="/2018/09/07/CPH购买前往Karlskrona的火车票/6.JPG" class="购票机" title="family or adult"><h4 id="Step5-支付成功后会有一张车票吐出来，车票要保管好，火车上会查票（family票两人一组）"><a href="#Step5-支付成功后会有一张车票吐出来，车票要保管好，火车上会查票（family票两人一组）" class="headerlink" title="Step5 - 支付成功后会有一张车票吐出来，车票要保管好，火车上会查票（family票两人一组）"></a>Step5 - 支付成功后会有一张车票吐出来，车票要保管好，火车上会查票（family票两人一组）</h4><img src="/2018/09/07/CPH购买前往Karlskrona的火车票/7.JPG" class="车票" title="车票"><h4 id="进站口是图上圈的这个1号口"><a href="#进站口是图上圈的这个1号口" class="headerlink" title="进站口是图上圈的这个1号口"></a>进站口是图上圈的这个1号口</h4><img src="/2018/09/07/CPH购买前往Karlskrona的火车票/8.jpg" class="进站口" title="进站口"><h4 id="火车上尽量找车厢靠前的位置，因为中途火车可能会断掉偏后的一些车厢，只有部分车厢到达卡村，可以选择在两个站下车（Karlskrona-Central-Station靠近市中心，Bergasa-station靠近学校）"><a href="#火车上尽量找车厢靠前的位置，因为中途火车可能会断掉偏后的一些车厢，只有部分车厢到达卡村，可以选择在两个站下车（Karlskrona-Central-Station靠近市中心，Bergasa-station靠近学校）" class="headerlink" title="火车上尽量找车厢靠前的位置，因为中途火车可能会断掉偏后的一些车厢，只有部分车厢到达卡村，可以选择在两个站下车（Karlskrona Central Station靠近市中心，Bergåsa station靠近学校）"></a>火车上尽量找车厢靠前的位置，因为中途火车可能会断掉偏后的一些车厢，只有部分车厢到达卡村，可以选择在两个站下车（Karlskrona Central Station靠近市中心，Bergåsa station靠近学校）</h4>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;…………&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="http://yoursite.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="瑞典" scheme="http://yoursite.com/tags/%E7%91%9E%E5%85%B8/"/>
    
  </entry>
  
  <entry>
    <title>leetcode-4.Median of Two Sorted Arrays</title>
    <link href="http://yoursite.com/2018/08/10/leetcode-4-Median-of-Two-Sorted-Arrays/"/>
    <id>http://yoursite.com/2018/08/10/leetcode-4-Median-of-Two-Sorted-Arrays/</id>
    <published>2018-08-10T08:47:15.000Z</published>
    <updated>2018-08-10T11:13:12.602Z</updated>
    
    <content type="html"><![CDATA[<p>There are two sorted arrays <strong>nums1</strong> and <strong>nums2</strong> of size m and n respectively.</p><p>Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).</p><p>You may assume <strong>nums1</strong> and <strong>nums2</strong> cannot be both empty.</p><a id="more"></a><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>题目是让我们求两个数组的中位数，如果没有时间复杂度限制条件的话，最简单好理解的方法是：把两个数组merge成一个sorted array，然后判断数组的长度的奇偶后直接可以得出中位数。</p><p>不过题目设置了时间复杂度O(log(m+n))，m和n分别是两个数组的长度。因此题目变得复杂了，这边我主要介绍一种我认为相对好理解的解法。</p><p><strong>该方法的核心是将原问题转变成一个寻找第k小数的问题（假设两个原序列升序排列），这样中位数实际上是第(m+n)/2小的数。所以只要解决了第k小数的问题，原问题也得以解决。</strong></p><p>首先假设数组A和B的元素个数都大于k/2，我们比较A[k/2-1]和B[k/2-1]两个元素，这两个元素分别表示A的第k/2小的元素和B的第k/2小的元素。这两个元素比较共有三种情况：&gt;、&lt;和=。</p><p>如果A[k/2-1]&lt;B[k/2-1]，这表示A[0]到A[k/2-1]的元素都在A和B合并之后的前k小的元素中。换句话说，A[k/2-1]不可能大于两数组合并之后的第k小值，所以我们可以将其抛弃。</p><p>当A[k/2-1]&gt;B[k/2-1]时存在类似的结论。</p><p>当A[k/2-1]=B[k/2-1]时，我们已经找到了第k小的数，也即这个相等的元素，我们将其记为m。由于在A和B中分别有k/2-1个元素小于m，所以m即是第k小的数。(这里可能有人会有疑问，如果k为奇数，则m不是中位数。这里是进行了理想化考虑，在实际代码中略有不同，是先求k/2，然后利用k-k/2获得另一个数。)</p><p>通过上面的分析，我们即可以采用递归的方式实现寻找第k小的数。此外我们还需要考虑几个边界条件：</p><ul><li>如果A或者B为空，则直接返回B[k-1]或者A[k-1]；</li><li>如果k为1，我们只需要返回A[0]和B[0]中的较小值；</li><li>如果A[k/2-1]=B[k/2-1]，返回其中一个；</li></ul><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">findKth</span><span class="params">(nums1, m, nums2, n, k)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> m&gt;n:</span><br><span class="line">        <span class="keyword">return</span> findKth(nums2, n, nums1, m, k)</span><br><span class="line">    <span class="keyword">if</span> m==<span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> nums2[k<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">if</span> k==<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> min(nums1[<span class="number">0</span>], nums2[<span class="number">0</span>])</span><br><span class="line">    pa = min(k//<span class="number">2</span>, m)</span><br><span class="line">    pb = k - pa</span><br><span class="line">    <span class="keyword">if</span> nums1[pa<span class="number">-1</span>]&lt;nums2[pb<span class="number">-1</span>]:</span><br><span class="line">        <span class="keyword">return</span> findKth(nums1[pa:], m-pa, nums2, n, k-pa)</span><br><span class="line">    <span class="keyword">elif</span> nums1[pa<span class="number">-1</span>]&gt;nums2[pb<span class="number">-1</span>]:</span><br><span class="line">        <span class="keyword">return</span> findKth(nums1, m, nums2[pb:], n-pb, k-pb)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> nums1[pa<span class="number">-1</span>]</span><br><span class="line">    </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findMedianSortedArrays</span><span class="params">(nums1, nums2)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type nums1: List[int]</span></span><br><span class="line"><span class="string">        :type nums2: List[int]</span></span><br><span class="line"><span class="string">        :rtype: float</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        m = len(nums1)</span><br><span class="line">        n = len(nums2)</span><br><span class="line">        k = (m+n)//<span class="number">2</span></span><br><span class="line">        <span class="keyword">if</span> (m+n)%<span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> (findKth(nums1, m, nums2, n, k)+findKth(nums1, m, nums2, n, k+<span class="number">1</span>))/<span class="number">2</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> findKth(nums1, m, nums2, n, k+<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>参考资料：<a href="https://blog.csdn.net/yutianzuijin/article/details/11499917" target="_blank" rel="noopener">leetcode之 median of two sorted arrays - CSDN博客</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;There are two sorted arrays &lt;strong&gt;nums1&lt;/strong&gt; and &lt;strong&gt;nums2&lt;/strong&gt; of size m and n respectively.&lt;/p&gt;
&lt;p&gt;Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).&lt;/p&gt;
&lt;p&gt;You may assume &lt;strong&gt;nums1&lt;/strong&gt; and &lt;strong&gt;nums2&lt;/strong&gt; cannot be both empty.&lt;/p&gt;
    
    </summary>
    
      <category term="leetcode" scheme="http://yoursite.com/categories/leetcode/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>理解RESTful架构</title>
    <link href="http://yoursite.com/2018/07/17/%E7%90%86%E8%A7%A3RESTful%E6%9E%B6%E6%9E%84/"/>
    <id>http://yoursite.com/2018/07/17/理解RESTful架构/</id>
    <published>2018-07-17T04:18:53.000Z</published>
    <updated>2018-07-17T05:09:30.239Z</updated>
    
    <content type="html"><![CDATA[<p>（转载）<a href="http://www.ruanyifeng.com/blog/2011/09/restful.html" target="_blank" rel="noopener">理解RESTful架构 - 阮一峰的网络日志</a></p><blockquote><h2 id="起源"><a href="#起源" class="headerlink" title="起源"></a>起源</h2></blockquote><p>REST这个词，是<strong><a href="https://en.wikipedia.org/wiki/Roy_Fielding" target="_blank" rel="noopener">Roy Thomas Fielding</a></strong>在他2000年的博士论文中提出的。</p><img src="/2018/07/17/理解RESTful架构/pic1.jpg" class="[Roy Thomas Fielding]"><p>Fielding是一个非常重要的人，他是HTTP协议（1.0版和1.1版）的主要设计者、Apache服务器软件的作者之一、Apache基金会的第一任主席。所以，他的这篇论文一经发表，就引起了关注，并且立即对互联网开发产生了深远的影响。</p><a id="more"></a><p>他这样介绍论文写作的目的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;本文研究计算机科学两大前沿----软件和网络----的交叉点。长期以来，软件研究主要关注软件设计的分类、设计方法的演化，很少客观地评估不同的设计选择对系统行为的影响。而相反地，网络研究主要关注系统之间通信行为的细节、如何改进特定通信机制的表现，常常忽视了一个事实，那就是改变应用程序的互动风格比改变互动协议，对整体表现有更大的影响。我这篇文章的写作目的，就是想在符合架构原理的前提下，理解和评估以网络为基础的应用软件的架构设计，得到一个功能强、性能好、适宜通信的架构。&quot;</span><br><span class="line"></span><br><span class="line">(This dissertation explores a junction on the frontiers of two research disciplines in computer science: software and networking. Software research has long been concerned with the categorization of software designs and the development of design methodologies, but has rarely been able to objectively evaluate the impact of various design choices on system behavior. Networking research, in contrast, is focused on the details of generic communication behavior between systems and improving the performance of particular communication techniques, often ignoring the fact that changing the interaction style of an application can have more impact on performance than the communication protocols used for that interaction. My work is motivated by the desire to understand and evaluate the architectural design of network-based application software through principled use of architectural constraints, thereby obtaining the functional, performance, and social properties desired of an architecture. )</span><br></pre></td></tr></table></figure><blockquote><h2 id="名称"><a href="#名称" class="headerlink" title="名称"></a>名称</h2></blockquote><p>Fielding将他对互联网软件的架构原则，定名为REST，即Representational State Transfer的缩写。我对这个词组的翻译是”表现层状态转化”。</p><p>如果一个架构符合REST原则，就称它为RESTful架构。</p><p><strong>要理解RESTful架构，最好的方法就是去理解Representational State Transfer这个词组到底是什么意思，它的每一个词代表了什么涵义。</strong>如果你把这个名称搞懂了，也就不难体会REST是一种什么样的设计。</p><blockquote><h2 id="资源（Resources）"><a href="#资源（Resources）" class="headerlink" title="资源（Resources）"></a>资源（Resources）</h2></blockquote><p>REST的名称”表现层状态转化”中，省略了主语。”表现层”其实指的是”资源”（Resources）的”表现层”。</p><p><strong>所谓”资源”，就是网络上的一个实体，或者说是网络上的一个具体信息。</strong>它可以是一段文本、一张图片、一首歌曲、一种服务，总之就是一个具体的实在。你可以用一个URI（统一资源定位符）指向它，每种资源对应一个特定的URI。要获取这个资源，访问它的URI就可以，因此URI就成了每一个资源的地址或独一无二的识别符。</p><p>所谓”上网”，就是与互联网上一系列的”资源”互动，调用它的URI。</p><blockquote><h2 id="表现层（Representation）"><a href="#表现层（Representation）" class="headerlink" title="表现层（Representation）"></a>表现层（Representation）</h2></blockquote><p>“资源”是一种信息实体，它可以有多种外在表现形式。<strong>我们把”资源”具体呈现出来的形式，叫做它的”表现层”（Representation）。</strong></p><p>比如，文本可以用txt格式表现，也可以用HTML格式、XML格式、JSON格式表现，甚至可以采用二进制格式；图片可以用JPG格式表现，也可以用PNG格式表现。</p><p>URI只代表资源的实体，不代表它的形式。严格地说，有些网址最后的”.html”后缀名是不必要的，因为这个后缀名表示格式，属于”表现层”范畴，而URI应该只代表”资源”的位置。它的具体表现形式，应该在HTTP请求的头信息中用Accept和Content-Type字段指定，这两个字段才是对”表现层”的描述。</p><blockquote><h2 id="状态转化（State-Transfer）"><a href="#状态转化（State-Transfer）" class="headerlink" title="状态转化（State Transfer）"></a>状态转化（State Transfer）</h2></blockquote><p>访问一个网站，就代表了客户端和服务器的一个互动过程。在这个过程中，势必涉及到数据和状态的变化。</p><p>互联网通信协议HTTP协议，是一个无状态协议。这意味着，所有的状态都保存在服务器端。因此，<strong>如果客户端想要操作服务器，必须通过某种手段，让服务器端发生”状态转化”（State Transfer）。而这种转化是建立在表现层之上的，所以就是”表现层状态转化”。</strong></p><p>客户端用到的手段，只能是HTTP协议。具体来说，就是HTTP协议里面，四个表示操作方式的动词：GET、POST、PUT、DELETE。它们分别对应四种基本操作：<strong>GET用来获取资源，POST用来新建资源（也可以用于更新资源），PUT用来更新资源，DELETE用来删除资源。</strong></p><blockquote><h2 id="综述"><a href="#综述" class="headerlink" title="综述"></a>综述</h2></blockquote><p>综合上面的解释，我们总结一下什么是RESTful架构：</p><p>　　（1）每一个URI代表一种资源；</p><p>　　（2）客户端和服务器之间，传递这种资源的某种表现层；</p><p>　　（3）客户端通过四个HTTP动词，对服务器端资源进行操作，实现”表现层状态转化”。</p><blockquote><h2 id="误区"><a href="#误区" class="headerlink" title="误区"></a>误区</h2></blockquote><p>RESTful架构有一些典型的设计误区。</p><p><strong>最常见的一种设计错误，就是URI包含动词。</strong>因为”资源”表示一种实体，所以应该是名词，URI不应该有动词，动词应该放在HTTP协议中。</p><p>举例来说，某个URI是/posts/show/1，其中show是动词，这个URI就设计错了，正确的写法应该是/posts/1，然后用GET方法表示show。</p><p>如果某些动作是HTTP动词表示不了的，你就应该把动作做成一种资源。比如网上汇款，从账户1向账户2汇款500元，错误的URI是：</p><blockquote><p>　POST /accounts/1/transfer/500/to/2</p></blockquote><p>正确的写法是把动词transfer改成名词transaction，资源不能是动词，但是可以是一种服务：</p><blockquote><p>　　POST /transaction HTTP/1.1<br>　　Host: 127.0.0.1<br>　　from=1&amp;to=2&amp;amount=500.00</p></blockquote><p><strong>另一个设计误区，就是在URI中加入版本号</strong>：</p><blockquote><p>　　<a href="http://www.example.com/app/1.0/foo" target="_blank" rel="noopener">http://www.example.com/app/1.0/foo</a></p><p>　　<a href="http://www.example.com/app/1.1/foo" target="_blank" rel="noopener">http://www.example.com/app/1.1/foo</a></p><p>　　<a href="http://www.example.com/app/2.0/foo" target="_blank" rel="noopener">http://www.example.com/app/2.0/foo</a></p></blockquote><p>因为不同的版本，可以理解成同一种资源的不同表现形式，所以应该采用同一个URI。版本号可以在HTTP请求头信息的Accept字段中进行区分（参见<a href="http://www.informit.com/articles/article.aspx?p=1566460" target="_blank" rel="noopener">Versioning REST Services</a>）：</p><blockquote><p>　　Accept: vnd.example-com.foo+json; version=1.0</p><p>　　Accept: vnd.example-com.foo+json; version=1.1</p><p>　　Accept: vnd.example-com.foo+json; version=2.0</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;（转载）&lt;a href=&quot;http://www.ruanyifeng.com/blog/2011/09/restful.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;理解RESTful架构 - 阮一峰的网络日志&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;h2 id=&quot;起源&quot;&gt;&lt;a href=&quot;#起源&quot; class=&quot;headerlink&quot; title=&quot;起源&quot;&gt;&lt;/a&gt;起源&lt;/h2&gt;&lt;/blockquote&gt;
&lt;p&gt;REST这个词，是&lt;strong&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Roy_Fielding&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Roy Thomas Fielding&lt;/a&gt;&lt;/strong&gt;在他2000年的博士论文中提出的。&lt;/p&gt;
&lt;img src=&quot;/2018/07/17/理解RESTful架构/pic1.jpg&quot; class=&quot;[Roy Thomas Fielding]&quot;&gt;
&lt;p&gt;Fielding是一个非常重要的人，他是HTTP协议（1.0版和1.1版）的主要设计者、Apache服务器软件的作者之一、Apache基金会的第一任主席。所以，他的这篇论文一经发表，就引起了关注，并且立即对互联网开发产生了深远的影响。&lt;/p&gt;
    
    </summary>
    
    
      <category term="RESTful架构" scheme="http://yoursite.com/tags/RESTful%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>Mac&amp;Linux命令自查</title>
    <link href="http://yoursite.com/2018/07/15/Mac-Linux%E5%91%BD%E4%BB%A4%E8%87%AA%E6%9F%A5/"/>
    <id>http://yoursite.com/2018/07/15/Mac-Linux命令自查/</id>
    <published>2018-07-15T09:29:42.000Z</published>
    <updated>2018-09-13T13:16:29.974Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h2 id="Linux-rm命令-删除文件夹"><a href="#Linux-rm命令-删除文件夹" class="headerlink" title="Linux rm命令 删除文件夹"></a>Linux rm命令 删除文件夹</h2></blockquote><p>Linux删除目录很简单，很多人还是习惯用rmdir，不过一旦目录非空，就陷入深深的苦恼之中，现在使用rm -rf命令即可。</p><p>直接rm就可以了，不过要加两个参数-rf 即：<code>rm -rf 目录名字</code></p><p>-r 就是向下递归，不管有多少级目录，一并删除</p><p>-f 就是直接强行删除，不作任何提示的意思</p><p><em>注意事项：使用这个rm -rf的时候一定要格外小心，linux没有回收站的</em></p><a id="more"></a><blockquote><h2 id="Linux-ls命令"><a href="#Linux-ls命令" class="headerlink" title="Linux ls命令"></a>Linux ls命令</h2></blockquote><p><strong>显示当前目录下非隐藏文件与目录:</strong> <code>ls</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ls</span><br><span class="line">anaconda-ks.cfg  install.log  install.log.syslog  satools</span><br></pre></td></tr></table></figure><p><strong>显示当前目录下包括影藏文件在内的所有文件列表:</strong><code>ls -a</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ls -a</span><br><span class="line">.   anaconda-ks.cfg  .bash_logout   .bashrc  install.log         .mysql_history  satools  .tcshrc   .vimrc</span><br><span class="line">..  .bash_history    .bash_profile  .cshrc   install.log.syslog  .rnd            .ssh     .viminfo</span><br></pre></td></tr></table></figure><p><strong>输出长格式列表:</strong><code>ls -l</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ls -1</span><br><span class="line">anaconda-ks.cfg</span><br><span class="line">install.log</span><br><span class="line">install.log.syslog</span><br><span class="line">satools</span><br></pre></td></tr></table></figure><p><strong>水平输出文件列表:</strong><code>ls -m</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]# ls -m</span><br><span class="line"></span><br><span class="line">bin,boot, data, dev, etc, home, lib, lost+found, media, misc, mnt, opt, proc, root, sbin, selinux, srv, sys, tmp, usr, var</span><br></pre></td></tr></table></figure><p><strong>最近修改的文件显示在最上面:</strong><code>ls -t</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]# ls -t</span><br><span class="line"></span><br><span class="line">tmp  root  etc  dev  lib  boot  sys  proc  data  home  bin  sbin  usr  var  lost+found  media  mnt  opt  selinux  srv  misc</span><br></pre></td></tr></table></figure><p><strong>显示递归文件:</strong><code>ls -R</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ls -R</span><br><span class="line">.:</span><br><span class="line">anaconda-ks.cfg  install.log  install.log.syslog  satools</span><br><span class="line"></span><br><span class="line">./satools:</span><br><span class="line">black.txt  freemem.sh  iptables.sh  lnmp.sh  mysql  php502_check.sh  ssh_safe.sh</span><br></pre></td></tr></table></figure><p>-a：显示所有档案及目录（ls内定将档案名或目录名称为“.”的视为影藏，不会列出）；<br>-A：显示除影藏文件“.”和“..”以外的所有文件列表；<br>-C：多列显示输出结果。这是默认选项；<br>-l：与“-C”选项功能相反，所有输出信息用单列格式输出，不输出为多列；<br>-F：在每个输出项后追加文件的类型标识符，具体含义：“<em>”表示具有可执行权限的普通文件，“/”表示目录，“@”表示符号链接，“|”表示命令管道FIFO，“=”表示sockets套接字。当文件为普通文件时，不输出任何标识符；<br>-b：将文件中的不可输出的字符以反斜线“”加字符编码的方式输出；<br>-c：与“-lt”选项连用时，按照文件状态时间排序输出目录内容，排序的依据是文件的索引节点中的ctime字段。与“-l”选项连用时，则排序的一句是文件的状态改变时间；<br>-d：仅显示目录名，而不显示目录下的内容列表。显示符号链接文件本身，而不显示其所指向的目录列表；<br>-f：此参数的效果和同时指定“aU”参数相同，并关闭“lst”参数的效果；<br>-i：显示文件索引节点号（inode）。一个索引节点代表一个文件；<br>–file-type：与“-F”选项的功能相同，但是不显示“</em>”；<br>-k：以KB（千字节）为单位显示文件大小；<br>-l：以长格式显示目录下的内容列表。输出的信息从左到右依次包括文件名，文件类型、权限模式、硬连接数、所有者、组、文件大小和文件的最后修改时间等；<br>-m：用“,”号区隔每个文件和目录的名称；<br>-n：以用户识别码和群组识别码替代其名称；<br>-r：以文件名反序排列并输出目录内容列表；<br>-s：显示文件和目录的大小，以区块为单位；<br>-t：用文件和目录的更改时间排序；<br>-L：如果遇到性质为符号链接的文件或目录，直接列出该链接所指向的原始文件或目录；<br>-R：递归处理，将指定目录下的所有文件及子目录一并处理；<br>–full-time：列出完整的日期与时间；<br>–color[=WHEN]：使用不同的颜色高亮显示不同类型的。</p><blockquote><h2 id="Mac-SSH命令"><a href="#Mac-SSH命令" class="headerlink" title="Mac SSH命令"></a>Mac SSH命令</h2></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh root@ip -p 4567</span><br></pre></td></tr></table></figure><p>用ssh连接服务器<code>-p</code>后面跟端口号</p><blockquote><h2 id="Mac-scp命令"><a href="#Mac-scp命令" class="headerlink" title="Mac scp命令"></a>Mac scp命令</h2></blockquote><p><strong>把本地文件copy到远程服务器上：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp &lt;local file&gt; &lt;remote user&gt;@&lt;remote machine&gt;:&lt;remote path&gt;</span><br></pre></td></tr></table></figure><p><strong>把远程服务器上的文件copy到本地：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp &lt;remote user&gt;@&lt;remote machine&gt;:&lt;remote path&gt; &lt;local file&gt;</span><br></pre></td></tr></table></figure><p>-1                        强制scp命令使用协议ssh1<br>-2                        强制scp命令使用协议ssh2<br>-4                        强制scp命令只使用IPv4寻址<br>-6                        强制scp命令只使用IPv6寻址<br>-B                        使用批处理模式（传输过程中不询问传输口令或短语）<br>-C                        允许压缩。（将-C标志传递给ssh，从而打开压缩功能）<br>-p                         保留原文件的修改时间，访问时间和访问权限。<br>-q                         不显示传输进度条。<br><strong>-r                          递归复制整个目录。</strong><br>-v                          详细方式显示输出。scp和ssh(1)会显示出整个过程的调试信息。这些信息用于调试连接，验证和配置问题。<br>-c cipher              以cipher将数据传输进行加密，这个选项将直接传递给ssh。<br>-F ssh_config      指定一个替代的ssh配置文件，此参数直接传递给ssh。<br>-i identity_file      从指定文件中读取传输时使用的密钥文件，此参数直接传递给ssh。<br>-l limit                    限定用户所能使用的带宽，以Kbit/s为单位。<br>-o ssh_option      如果习惯于使用ssh_config(5)中的参数传递方式，<br><strong>-P port                  注意是大写的P, port是指定数据传输用到的端口号</strong><br>-S program         指定加密传输时所使用的程序。此程序必须能够理解ssh(1)的选项。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;h2 id=&quot;Linux-rm命令-删除文件夹&quot;&gt;&lt;a href=&quot;#Linux-rm命令-删除文件夹&quot; class=&quot;headerlink&quot; title=&quot;Linux rm命令 删除文件夹&quot;&gt;&lt;/a&gt;Linux rm命令 删除文件夹&lt;/h2&gt;&lt;/blockquote&gt;
&lt;p&gt;Linux删除目录很简单，很多人还是习惯用rmdir，不过一旦目录非空，就陷入深深的苦恼之中，现在使用rm -rf命令即可。&lt;/p&gt;
&lt;p&gt;直接rm就可以了，不过要加两个参数-rf 即：&lt;code&gt;rm -rf 目录名字&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;-r 就是向下递归，不管有多少级目录，一并删除&lt;/p&gt;
&lt;p&gt;-f 就是直接强行删除，不作任何提示的意思&lt;/p&gt;
&lt;p&gt;&lt;em&gt;注意事项：使用这个rm -rf的时候一定要格外小心，linux没有回收站的&lt;/em&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="学习" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
      <category term="shell" scheme="http://yoursite.com/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>Mac第一篇</title>
    <link href="http://yoursite.com/2018/07/10/Mac%E7%AC%AC%E4%B8%80%E7%AF%87/"/>
    <id>http://yoursite.com/2018/07/10/Mac第一篇/</id>
    <published>2018-07-10T06:35:16.000Z</published>
    <updated>2018-07-10T06:38:53.564Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>我很开心呢</strong></p></blockquote><p>测试一下行不行</p><a id="more"></a><p><u><strong><em>look more 好吗</em></strong></u></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;我很开心呢&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;测试一下行不行&lt;/p&gt;
    
    </summary>
    
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>5-21学习小结</title>
    <link href="http://yoursite.com/2018/05/21/5-21%E5%AD%A6%E4%B9%A0%E5%B0%8F%E7%BB%93/"/>
    <id>http://yoursite.com/2018/05/21/5-21学习小结/</id>
    <published>2018-05-21T06:48:43.000Z</published>
    <updated>2018-07-10T06:20:12.640Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>Normal equation</strong></p></blockquote><p>标准方程能够快速计算(在n相对较小的情况)出θ的值不需要迭代。</p><table><thead><tr><th>Gradient Descent</th><th>Normal Equation</th></tr></thead><tbody><tr><td>Need to choose alpha</td><td>No need to choose alpha</td></tr><tr><td>Needs many iterations</td><td>No need to iterate</td></tr><tr><td>O (kn^2)</td><td>O (n^3), need to calculate inverse of X^T*X</td></tr><tr><td>Works well when n is large</td><td>Slow if n is very large</td></tr></tbody></table> <a id="more"></a><p>In practice, when n exceeds 10,000 it might be a good time to go from a normal solution to an iterative process.</p><p>If X^T*X is  <u>noninvertible</u>, the common causes might be having :</p><ul><li>Redundant features, where two features are very closely related (i.e. they are linearly dependent)</li></ul><ul><li>Too many features (e.g. m ≤ n). In this case, delete some features or use “regularization” (to be explained in a later lesson).</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Normal equation&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;标准方程能够快速计算(在n相对较小的情况)出θ的值不需要迭代。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Gradient Descent&lt;/th&gt;
&lt;th&gt;Normal Equation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Need to choose alpha&lt;/td&gt;
&lt;td&gt;No need to choose alpha&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Needs many iterations&lt;/td&gt;
&lt;td&gt;No need to iterate&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;O (kn^2)&lt;/td&gt;
&lt;td&gt;O (n^3), need to calculate inverse of X^T*X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Works well when n is large&lt;/td&gt;
&lt;td&gt;Slow if n is very large&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="学习" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
      <category term="机器学习" scheme="http://yoursite.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>5-10学习小结</title>
    <link href="http://yoursite.com/2018/05/10/5-10%E5%AD%A6%E4%B9%A0%E5%B0%8F%E7%BB%93/"/>
    <id>http://yoursite.com/2018/05/10/5-10学习小结/</id>
    <published>2018-05-10T14:35:27.000Z</published>
    <updated>2018-07-10T06:20:12.631Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>Model Representation</strong></p></blockquote><img src="/2018/05/10/5-10学习小结/1.png" class="model"><p>监督算法模型，给予一个<strong>训练数据集</strong>到<strong>学习算法</strong>，然后得到一个<u>hypothesis(假设)</u>函数 – 输入X值后能预测相应的Y值</p><a id="more"></a><blockquote><p><strong>Cost function</strong></p></blockquote><img src="/2018/05/10/5-10学习小结/2.jpg" class="cost_function"><p>求出代价函数的最小值，对应的参数值就是假设函数的最佳参数。</p><img src="/2018/05/10/5-10学习小结/3.png" class="cost_function"><img src="/2018/05/10/5-10学习小结/4.jpg" class="cost_function"><img src="/2018/05/10/5-10学习小结/5.png" class="contour_plot" title="等高线图，越往中心的弧圈代表代价函数J 的值越小。"><p>等高线图，越往中心的弧圈代表代价函数J 的值越小。</p><blockquote><p><strong>Gradient descent algorithm</strong>(梯度下降算法)</p></blockquote><p><code>:=</code>表示赋值运算符</p><img src="/2018/05/10/5-10学习小结/change.png" class="Gradient descent algorithm" title="梯度下降算法原理"><p>如果系数偏大，导数为正数，系数会变小；反之，系数偏小，导数为负数，系数会变大。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Model Representation&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img src=&quot;/2018/05/10/5-10学习小结/1.png&quot; class=&quot;model&quot;&gt;
&lt;p&gt;监督算法模型，给予一个&lt;strong&gt;训练数据集&lt;/strong&gt;到&lt;strong&gt;学习算法&lt;/strong&gt;，然后得到一个&lt;u&gt;hypothesis(假设)&lt;/u&gt;函数 – 输入X值后能预测相应的Y值&lt;/p&gt;
    
    </summary>
    
      <category term="学习" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
      <category term="机器学习" scheme="http://yoursite.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>5.2学习小结</title>
    <link href="http://yoursite.com/2018/05/02/5-2%E5%AD%A6%E4%B9%A0%E5%B0%8F%E7%BB%93/"/>
    <id>http://yoursite.com/2018/05/02/5-2学习小结/</id>
    <published>2018-05-02T12:48:24.000Z</published>
    <updated>2018-07-10T06:20:12.641Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>Supervised learning</strong></p></blockquote><ul><li>给algorithm一个data set in which <strong>“right answers” given</strong></li><li><u>Regression:</u> predict continuous valued output</li><li><u>Classification</u> = discrete valued output(0 or 1)</li></ul><blockquote><p><strong>Unsupervised learning</strong></p></blockquote><ul><li>just give algorithm a data set nothing else(no extra information)不知道数据集的意义</li><li>clustering algorithm 聚合算法</li><li>Cocktail party problem 鸡尾酒会算法</li><li><strong>Octave</strong><br><em><u>diabetes</u></em></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Supervised learning&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;给algorithm一个data set in which &lt;strong&gt;“right answers” given&lt;
      
    
    </summary>
    
      <category term="学习" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
      <category term="机器学习" scheme="http://yoursite.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Bachelor, Master and Doctor</title>
    <link href="http://yoursite.com/2018/05/02/Bachelor-Master-and-Doctor/"/>
    <id>http://yoursite.com/2018/05/02/Bachelor-Master-and-Doctor/</id>
    <published>2018-05-02T11:41:23.000Z</published>
    <updated>2018-07-10T06:20:12.642Z</updated>
    
    <content type="html"><![CDATA[<p><strong>BA</strong>: 文学学士学位（Bachelor of Arts）</p><p><strong>BBA</strong>: 工商业管理学士学位(Bachelor of Business Administration)</p><p><strong>BS</strong>: 理学学士学位(Bachelor of sciense)</p><p><strong>MA</strong>：文学硕士学位(Master of Arts)</p><p><strong>MS</strong>：理学硕士学位(Master of Sciense)</p><p><strong>MBA</strong>：工商管理硕士学位(Master of Business Administration)</p><p><strong>PhD</strong>：哲学博士学位，文理科均可。(Doctor of Philosophy)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;BA&lt;/strong&gt;: 文学学士学位（Bachelor of Arts）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;BBA&lt;/strong&gt;: 工商业管理学士学位(Bachelor of Business Administration)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;
      
    
    </summary>
    
      <category term="学习" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学位" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%BD%8D/"/>
    
  </entry>
  
  <entry>
    <title>python简单爬虫爬取豆瓣影人照片</title>
    <link href="http://yoursite.com/2018/03/18/python%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB%E7%88%AC%E5%8F%96%E8%B1%86%E7%93%A3%E5%BD%B1%E4%BA%BA%E7%85%A7%E7%89%87/"/>
    <id>http://yoursite.com/2018/03/18/python简单爬虫爬取豆瓣影人照片/</id>
    <published>2018-03-18T10:17:08.000Z</published>
    <updated>2018-07-10T06:20:12.643Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> requests, os, re</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urljoin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 豆瓣图片爬虫</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SpiderMain</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取该页面上单独图片页面的链接</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_get_new_urls</span><span class="params">(self, page_url, soup)</span>:</span></span><br><span class="line">        new_urls = set()</span><br><span class="line">        reg = <span class="string">r"https://movie.douban.com/celebrity/"</span> + page_url.split(<span class="string">'/'</span>)[<span class="number">4</span>] + <span class="string">r"/photo/\d+/$"</span>      <span class="comment">#正则表达式</span></span><br><span class="line">        links = soup.find_all(<span class="string">'a'</span>, href=re.compile(reg))</span><br><span class="line">        <span class="keyword">for</span> link <span class="keyword">in</span> links:</span><br><span class="line">            new_url = link[<span class="string">'href'</span>]</span><br><span class="line">            new_full_url = urljoin(page_url, new_url)</span><br><span class="line">            new_urls.add(new_full_url)</span><br><span class="line">        <span class="keyword">return</span> new_urls</span><br><span class="line"></span><br><span class="line">    <span class="comment">#获取该名人的姓名作为图片文件夹名</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_get_name</span><span class="params">(self, root_url)</span>:</span></span><br><span class="line">        response = requests.get(root_url)</span><br><span class="line">        html_cont = response.content</span><br><span class="line">        soup = BeautifulSoup(html_cont, <span class="string">'html.parser'</span>)</span><br><span class="line">        name = soup.find(<span class="string">"div"</span>, attrs=&#123;<span class="string">"id"</span>:<span class="string">"content"</span>&#125;).h1.text.split()[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">return</span> name</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 爬图片开始喽</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">crawl</span><span class="params">(self, root_url)</span>:</span></span><br><span class="line">        dir_name = self._get_name(root_url)</span><br><span class="line">        dirIsExist = os.path.exists(os.getcwd() + <span class="string">r'\\douban\\%s'</span>%dir_name)       <span class="comment">#该文件夹是否存在</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> dirIsExist:</span><br><span class="line">            os.makedirs(os.getcwd() + <span class="string">r'\\douban\\%s'</span>%dir_name)         <span class="comment">#创建图片文件夹</span></span><br><span class="line">        os.chdir(os.path.join(os.getcwd(), <span class="string">r'douban\\%s'</span>%dir_name))     <span class="comment">#进入该文件夹</span></span><br><span class="line"></span><br><span class="line">        n = <span class="number">1</span>          <span class="comment">#图片数量</span></span><br><span class="line">        page = <span class="number">0</span>       <span class="comment">#图片页码</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> page &lt; <span class="number">2</span>:</span><br><span class="line">            url_ = root_url + <span class="string">"photos/?start=%d"</span> % (page*<span class="number">40</span>)</span><br><span class="line"></span><br><span class="line">            html_cont = requests.get(url_).content</span><br><span class="line"></span><br><span class="line">            soup = BeautifulSoup(html_cont, <span class="string">'html.parser'</span>)</span><br><span class="line"></span><br><span class="line">            urls = self._get_new_urls(url_, soup)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">                pic_name = str(n) + <span class="string">'.jpg'</span></span><br><span class="line">                img_url = <span class="string">"https://img1.doubanio.com/view/photo/l/public/p"</span> + url.split(<span class="string">'/'</span>)[<span class="number">6</span>] + <span class="string">".jpg"</span></span><br><span class="line">                pic = requests.get(img_url)</span><br><span class="line">                <span class="keyword">with</span> open(pic_name, <span class="string">'wb'</span>) <span class="keyword">as</span> file:      <span class="comment">#open函数?</span></span><br><span class="line">                    file.write(pic.content)</span><br><span class="line">                    file.flush()</span><br><span class="line">                file.close()</span><br><span class="line">                print(<span class="string">"Crawl "</span> + str(n) + <span class="string">" : "</span> + img_url)</span><br><span class="line">                n += <span class="number">1</span></span><br><span class="line">            page += <span class="number">1</span></span><br><span class="line">        print(<span class="string">"Crawl succeed !"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">    root_url = <span class="string">"https://movie.douban.com/celebrity/%d/"</span> % <span class="number">1274424</span>       <span class="comment">#只需修改该影人的豆瓣ID</span></span><br><span class="line">    obj_spider = SpiderMain()</span><br><span class="line">    obj_spider.crawl(root_url)</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas
      
    
    </summary>
    
      <category term="学习" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="爬虫" scheme="http://yoursite.com/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>3.17学习小结</title>
    <link href="http://yoursite.com/2018/03/17/post3-17%E5%AD%A6%E4%B9%A0%E5%B0%8F%E7%BB%93/"/>
    <id>http://yoursite.com/2018/03/17/post3-17学习小结/</id>
    <published>2018-03-17T15:16:38.000Z</published>
    <updated>2018-07-10T06:20:12.643Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h2 id="Anaconda是什么"><a href="#Anaconda是什么" class="headerlink" title="Anaconda是什么?"></a>Anaconda是什么?</h2></blockquote><p><em>简而言之就是<u>python</u>+<u>一堆用来数据处理的第三方包</u>+<u>python环境和这些包的管理器</u></em></p><p>1）Anaconda附带了一大批常用数据科学包，它附带了 conda、Python 和 150 多个科学包及其依赖项。因此你可以立即开始处理数据。</p><p>2）管理包<br>Anaconda 是在conda（一个包管理器和环境管理器）上发展出来的。<br>在数据分析中，你会用到很多第三方的包，而conda（包管理器）可以很好的帮助你在计算机上安装和管理这些包，包括安装、卸载和更新包。</p><p>3）管理环境<br>比如你在A项目中用了 Python2，而新的项目B老大要求使用Python 3，而同时安装两个Python版本可能会造成许多混乱和错误。这时候conda就可以帮助你为不同的项目建立不同的运行环境。</p><a id="more"></a><blockquote><h2 id="Conda命令关于管理环境"><a href="#Conda命令关于管理环境" class="headerlink" title="Conda命令关于管理环境"></a>Conda命令关于管理环境</h2></blockquote><p><strong>1）创建环境</strong></p><p>在终端中使用:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -nenv_name package_names</span><br></pre></td></tr></table></figure><p>上面的命令中，env_name是设置环境的名称（-n 是指该命令后面的env_name是你要创建环境的名称），package_names 是你要安装在创建环境中的包名称。</p><p><strong>2）创建环境时，可以指定要安装在环境中的 Python 版本</strong></p><p>当你同时使用 Python 2.x 和Python 3.x 中的代码时这很有用。要创建具有特定 Python 版本的环境，例如创建环境名称为py3，并安装最新版本的Python3在终端中输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n py3 python=3</span><br></pre></td></tr></table></figure><p>或也可以这样创建环境名称为py2，并安装最新版本的Python2：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n py2 python=2</span><br></pre></td></tr></table></figure><p>因为我做的项目不同，有时候会用到Python2，还有时候会用到Python3。所以我在自己的计算机上创建了这两个环境，并分别取了这样的环境名称：py2,py3。这样我可以根据不同的项目轻松使用不同版本的python。</p><p>如果你要安装特定版本（例如 Python3.6），请使用 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n py python=3.6</span><br></pre></td></tr></table></figure><p><strong>3）进入和离开环境</strong></p><p>在 Windows 上，你可以使用activate my_env进入。在 OSX/Linux 上使用 <code>source activate my_env</code> 进入环境。</p><p>离开：</p><p>在 Windows 上，终端中输入： </p><p><code>deactivate</code></p><p>在 OSX/Linux 上 输入：</p><p><code>source deactivate</code></p><p><strong>4）列出环境</strong></p><p>我有时候会忘记自己创建的环境名称，这时候用<code>conda env list</code>就可以列出你创建的所有环境。</p><p>你会看到环境的列表，而且你当前所在环境的旁边会有一个星号*。默认的环境（即当你不在选定环境中时使用的环境）名为root。</p><p><strong>5）删除环境</strong></p><p>如果你不再使用某个环境，可以使用<code>conda env remove -n env_name</code>删除指定的环境（在这里环境名为 env_name）。</p><blockquote><h2 id="Conda关于包的管理"><a href="#Conda关于包的管理" class="headerlink" title="Conda关于包的管理"></a>Conda关于包的管理</h2></blockquote><p><strong>1）安装包</strong></p><p>在终端中键入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install package_name</span><br></pre></td></tr></table></figure><p>例如，要安装 pandas，在终端中输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install pandas</span><br></pre></td></tr></table></figure><p>你还可以同时安装多个包。类似 <code>conda install pandas numpy</code>  的命令会同时安装所有这些包。还可以通过添加版本号（例如 conda install numpy=1.10）来指定所需的包版本。</p><p>conda 还会自动为你安装依赖项。例如，scipy 依赖于 numpy，因为它使用并需要 numpy。如果你只安装 scipy (conda install scipy)，则 conda 还会安装 numpy（如果尚未安装的话）。</p><p><strong>2）卸载包</strong></p><p>在终端中键入 ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda remove package_names</span><br></pre></td></tr></table></figure><p>上面命令中的package_names是指你要卸载包的名称，例如你想卸载pandas包：<code>conda remove pandas</code></p><p><strong>3）更新包</strong></p><p>在终端中键入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda update package_name</span><br></pre></td></tr></table></figure><p>如果想更新环境中的所有包（这样做常常很有用），使用：<code>conda update --all</code>。</p><p><strong>4）列出已安装的包</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#列出已安装的包</span><br><span class="line">conda list</span><br></pre></td></tr></table></figure><p>如果不知道要找的包的确切名称，可以尝试使用 <code>conda search search_term</code> 进行搜索。例如，我知道我想安装numpy，但我不清楚确切的包名称。我可以这样尝试：<code>conda search num</code>。</p><blockquote><h2 id="python类中的普通方法，静态方法和类方法"><a href="#python类中的普通方法，静态方法和类方法" class="headerlink" title="python类中的普通方法，静态方法和类方法"></a>python类中的普通方法，静态方法和类方法</h2></blockquote><p><em>（装饰器<strong>@classmethod</strong> 和<strong>@staticmethod</strong>）</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="comment">#普通方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">(self,x)</span>:</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">"executing foo(%s,%s)"</span>%(self,x)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#类方法</span></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">class_foo</span><span class="params">(cls,x)</span>:</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">"executing class_foo(%s,%s)"</span>%(cls,x)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#静态方法</span></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">static_foo</span><span class="params">(x)</span>:</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">"executing static_foo(%s)"</span>%x</span><br><span class="line"></span><br><span class="line">a=A()</span><br></pre></td></tr></table></figure><p>下面是一个对象实体调用方法的常用方式.对象实体<code>a</code>被隐藏的传递给了第一个参数.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a.foo(<span class="number">1</span>)</span><br><span class="line"><span class="comment"># executing foo(&lt;__main__.A object at 0xb7dbef0c&gt;,1)</span></span><br></pre></td></tr></table></figure><p>用<strong>classmethods</strong>装饰,隐藏的传递给第一个参数的是对象实体的类(<code>class A</code>)而不是<code>self</code>(实例对象).</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a.class_foo(<span class="number">1</span>)</span><br><span class="line"><span class="comment"># executing class_foo(&lt;class '__main__.A'&gt;,1)</span></span><br></pre></td></tr></table></figure><p>你也可以用类调用<code>class_foo</code>.实际上,如果你把一些方法定义成<code>classmethod</code>,那么<u>实际上你是希望用类来调用这个方法</u>,而不是用这个类的实例来调用这个方法.<code>A.foo(1)</code>将会返回一个<code>TypeError</code>错误,<code>A.class_foo(1)</code>将会正常运行:</p><p>用<strong>staticmethods</strong>来装饰,不管传递给第一个参数的是<code>self</code>(对象实体)还是<code>cls</code>(类).它们的表现都一样:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a.static_foo(<span class="number">1</span>)</span><br><span class="line"><span class="comment"># executing static_foo(1)</span></span><br><span class="line"></span><br><span class="line">A.static_foo(<span class="string">'hi'</span>)</span><br><span class="line"><span class="comment"># executing static_foo(hi)</span></span><br></pre></td></tr></table></figure><p><code>foo</code>只是个函数,但是当你调用<code>a.foo</code>的时候你得到的不仅仅是一个函数,你得到的是一个第一个参数绑定到<code>a</code>的”加强版”函数.<code>foo</code>需要两个参数,而<code>a.foo</code>仅仅需要一个参数.</p><p><code>a</code>绑定了<code>foo</code>.下面可以知道什么叫”绑定”了:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(a.foo)</span><br><span class="line"><span class="comment"># &lt;bound method A.foo of &lt;__main__.A object at 0xb7d52f0c&gt;&gt;</span></span><br></pre></td></tr></table></figure><p>如果使用<code>a.class_foo</code>,是<code>A</code>(类)绑定到了<code>class_foo</code>而不是<code>a</code>(对象实体).</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(a.class_foo)</span><br><span class="line"><span class="comment"># &lt;bound method type.class_foo of &lt;class '__main__.A'&gt;&gt;</span></span><br></pre></td></tr></table></figure><p>最后剩下静态方法,说到底它就是一个方法.<code>a.static_foo</code>只是返回一个不带参数绑定的方法.<code>A.static_foo</code>和<code>a.static_foo</code>只需要一个参数.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(a.static_foo)</span><br><span class="line"><span class="comment"># &lt;function static_foo at 0xb7d479cc&gt;</span></span><br></pre></td></tr></table></figure><p><strong>参考资料</strong></p><p><a href="https://conda.io/docs/user-guide/tasks/index.html" target="_blank" rel="noopener">conda官方命令文档</a></p><p><a href="https://www.zhihu.com/question/58033789" target="_blank" rel="noopener">初学python者自学anaconda的正确姿势是什么？？</a></p><p><a href="https://www.zhihu.com/question/20021164" target="_blank" rel="noopener">Python 中的 classmethod 和 staticmethod 有什么具体用途？ - 知乎</a></p><p><a href="https://taizilongxu.gitbooks.io/stackoverflow-about-python/content/14/README.html" target="_blank" rel="noopener">装饰器@staticmethod和@classmethod有什么区别_ _ Stackoverflow about Python</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;h2 id=&quot;Anaconda是什么&quot;&gt;&lt;a href=&quot;#Anaconda是什么&quot; class=&quot;headerlink&quot; title=&quot;Anaconda是什么?&quot;&gt;&lt;/a&gt;Anaconda是什么?&lt;/h2&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;简而言之就是&lt;u&gt;python&lt;/u&gt;+&lt;u&gt;一堆用来数据处理的第三方包&lt;/u&gt;+&lt;u&gt;python环境和这些包的管理器&lt;/u&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;1）Anaconda附带了一大批常用数据科学包，它附带了 conda、Python 和 150 多个科学包及其依赖项。因此你可以立即开始处理数据。&lt;/p&gt;
&lt;p&gt;2）管理包&lt;br&gt;Anaconda 是在conda（一个包管理器和环境管理器）上发展出来的。&lt;br&gt;在数据分析中，你会用到很多第三方的包，而conda（包管理器）可以很好的帮助你在计算机上安装和管理这些包，包括安装、卸载和更新包。&lt;/p&gt;
&lt;p&gt;3）管理环境&lt;br&gt;比如你在A项目中用了 Python2，而新的项目B老大要求使用Python 3，而同时安装两个Python版本可能会造成许多混乱和错误。这时候conda就可以帮助你为不同的项目建立不同的运行环境。&lt;/p&gt;
    
    </summary>
    
      <category term="学习" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Anaconda" scheme="http://yoursite.com/tags/Anaconda/"/>
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>演员的定义</title>
    <link href="http://yoursite.com/2018/02/15/%E6%BC%94%E5%91%98%E7%9A%84%E5%AE%9A%E4%B9%89/"/>
    <id>http://yoursite.com/2018/02/15/演员的定义/</id>
    <published>2018-02-15T08:21:08.000Z</published>
    <updated>2018-07-10T06:20:12.643Z</updated>
    
    <content type="html"><![CDATA[<p>花了些时间看完了<strong>今日影评·表演者言</strong>，节目分为10期，每期15分钟左右，节目发起人周迅（小迷弟）和一些老戏骨嘉宾一起来讲述他们对演员的理解和演员所需要的能力和品质。</p><p>节目虽短，但内容却十分充实。周迅和这些优秀的演员都能很真诚地描述他们的经历经验以及对演员的理解。他们作为过来人，很多东西都值得年轻演员学习和参考。</p><p>对于一名优秀的演员来说，TA需要拥有什么呢？</p><a id="more"></a><h3 id="体验生活"><a href="#体验生活" class="headerlink" title="体验生活"></a>体验生活</h3><p>最重要也是最根本的一点，作为一个演员，最好的表演往往是最真实的。</p><p>表演源自于生活，好的演员能呈献给观众生活中的点滴和细节。而这些细腻的东西都需要人从生活体验并积累。种种经历会不断丰富你的阅历，阅历会让表演充实和真实。所以说最好的表演也是无表演，它就像是生活中真真实实发生的事。</p><h3 id="观察生活"><a href="#观察生活" class="headerlink" title="观察生活"></a>观察生活</h3><p>身边的每一个人，每一件事都可以是电影中的一部分。而观察人物的一举一动和事件的发展过程，是提升演员自身对角色和故事理解的重要方法。因为作品中的每个角色往往都能在现实中找到类似的模板。</p><p>当你对演绎某个角色感到困惑的时候，现实生活往往会给你答案。察言观色是理解一个角色的必备技能。</p><h3 id="学习互补"><a href="#学习互补" class="headerlink" title="学习互补"></a>学习互补</h3><p>向优秀演员取经，吸收他们的优点，相互促进，提升自己。通过一部又一部的作品去学习每个方面，从导演角度从各个角度去审视作品。</p><h3 id="理性之中融入感性"><a href="#理性之中融入感性" class="headerlink" title="理性之中融入感性"></a>理性之中融入感性</h3><p>演员到头来还是要由理性主导的。在尊重作品，尊重人物的前提下加入演员的主观想法（自身理解）是角色演绎的最高境界。</p><p>感性至上带来的结果往往就是极端表现，角色的特征被演员自身特点代替或是角色形象是演员自己处理后模样。这会使角色带上个人情感色彩，可能不利于角色和作品本身。但也有一些情况是，在演员自身极具天赋的情况下，感性演绎会给角色附上一个独特色彩，让角色升华。这样的情况往往会出现在一些非科班出身的演员上。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;花了些时间看完了&lt;strong&gt;今日影评·表演者言&lt;/strong&gt;，节目分为10期，每期15分钟左右，节目发起人周迅（小迷弟）和一些老戏骨嘉宾一起来讲述他们对演员的理解和演员所需要的能力和品质。&lt;/p&gt;
&lt;p&gt;节目虽短，但内容却十分充实。周迅和这些优秀的演员都能很真诚地描述他们的经历经验以及对演员的理解。他们作为过来人，很多东西都值得年轻演员学习和参考。&lt;/p&gt;
&lt;p&gt;对于一名优秀的演员来说，TA需要拥有什么呢？&lt;/p&gt;
    
    </summary>
    
      <category term="学习" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="电影" scheme="http://yoursite.com/tags/%E7%94%B5%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title>未来七日计划</title>
    <link href="http://yoursite.com/2018/01/31/plan/"/>
    <id>http://yoursite.com/2018/01/31/plan/</id>
    <published>2018-01-31T03:55:34.000Z</published>
    <updated>2018-07-10T06:20:12.642Z</updated>
    
    <content type="html"><![CDATA[<h2 id="计划flag"><a href="#计划flag" class="headerlink" title="计划flag"></a>计划flag</h2><p><u>写一点简单的hexo入门教程</u><br><a id="more"></a></p><ol><li><strong>hexo+github</strong>搭建个人博客入门（自己学习心得）</li><li>关于hexo的备份（在github上再创建一个备份<strong>branch</strong>，因为<code>hexo d</code> deploy上去的只是<em><u>网页的静态文件</u></em>不是hexo项目整个文件夹）</li><li>先这样吧</li></ol><hr><h3 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h3><p><a href="https://www.jianshu.com/p/baab04284923" target="_blank" rel="noopener">hexo备份</a></p><p><a href="https://www.zhihu.com/question/21193762/answer/79109280" target="_blank" rel="noopener">使用hexo，如果换了电脑怎么更新博客？ - CrazyMilk的回答 - 知乎</a></p><p><a href="http://blog.csdn.net/gdutxiaoxu/article/details/53576018" target="_blank" rel="noopener">手把手教你用Hexo+Github 搭建属于自己的博客</a></p><p><a href="https://zhuanlan.zhihu.com/p/26625249" target="_blank" rel="noopener">GitHub+Hexo 搭建个人网站详细教程</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;计划flag&quot;&gt;&lt;a href=&quot;#计划flag&quot; class=&quot;headerlink&quot; title=&quot;计划flag&quot;&gt;&lt;/a&gt;计划flag&lt;/h2&gt;&lt;p&gt;&lt;u&gt;写一点简单的hexo入门教程&lt;/u&gt;&lt;br&gt;
    
    </summary>
    
      <category term="学习" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="NexT" scheme="http://yoursite.com/tags/NexT/"/>
    
  </entry>
  
  <entry>
    <title>Typora-学习笔记</title>
    <link href="http://yoursite.com/2018/01/30/Typora%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2018/01/30/Typora学习笔记/</id>
    <published>2018-01-30T12:44:40.000Z</published>
    <updated>2018-07-10T06:20:12.642Z</updated>
    
    <content type="html"><![CDATA[<h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><p><em>斜体</em> <code>* *</code><br><strong>加粗</strong> <code>** **</code> 或者<code>__ __</code><br><u>下划线</u> <code>&lt;u&gt; &lt;/u&gt;</code><br><del>删除线</del> <code>~~ ~~</code><br>代码块<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'hello world!'</span>)</span><br></pre></td></tr></table></figure></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">"Hello World!"</span>);</span><br></pre></td></tr></table></figure> <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">​<span class="code">```语言</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">balabala</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><ol><li>一一 </li><li>二二 </li><li>三三 </li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>11</span><br><span class="line"><span class="bullet">2. </span>22</span><br><span class="line"><span class="bullet">3. </span>33</span><br></pre></td></tr></table></figure><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><ul><li>周</li><li>冬 </li><li>雨</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">- </span>小</span><br><span class="line"><span class="bullet">- </span>黄</span><br><span class="line"><span class="bullet">- </span>鸭</span><br><span class="line">-,+,*皆可</span><br></pre></td></tr></table></figure><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><p><a href="https://www.google.com" target="_blank" rel="noopener">这个是链接啊</a></p><p>&lt;<a href="http://www.baidu.com&gt;" target="_blank" rel="noopener">www.baidu.com&gt;</a></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">word</span>](<span class="link">link</span>)</span><br><span class="line">&lt;link&gt;</span><br></pre></td></tr></table></figure><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><blockquote><p>第一级引用</p><blockquote><p>第二级</p><blockquote><p>第三级</p></blockquote></blockquote></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt; 1</span></span><br><span class="line"><span class="code">&gt; 2</span></span><br><span class="line"><span class="code">&gt; 3</span></span><br></pre></td></tr></table></figure><h2 id="居中"><a href="#居中" class="headerlink" title="居中"></a>居中</h2><center>居中了吗？</center><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;center&gt;居中了啦~&lt;/center&gt;</span><br></pre></td></tr></table></figure><h2 id="标注（Hexo不支持T-T）"><a href="#标注（Hexo不支持T-T）" class="headerlink" title="标注（Hexo不支持T_T）"></a>标注（Hexo不支持T_T）</h2><p>Example[^1]</p><p>[^1]: this is a note</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">某些人用过了才知道[^注释]</span><br><span class="line">[<span class="symbol">^注释</span>]:<span class="link">Somebody that I used to know.</span></span><br></pre></td></tr></table></figure><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><table><thead><tr><th style="text-align:center">周</th><th style="text-align:center">冬</th><th style="text-align:center">雨</th></tr></thead><tbody><tr><td style="text-align:center">郑</td><td style="text-align:center">茅</td><td style="text-align:center">炜</td></tr><tr><td style="text-align:center">在</td><td style="text-align:center">一</td><td style="text-align:center">起</td></tr></tbody></table><p> 快捷键<code>Ctrl+T</code></p><h2 id="图片插入"><a href="#图片插入" class="headerlink" title="图片插入"></a>图片插入</h2><img src="/2018/01/30/Typora学习笔记/pic.jpg" class="图片ALT" title="图片介绍"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">ALT</span>](<span class="link">image.jpg 图片介绍</span>)</span><br><span class="line">&#123;% asset_img 图片ALT pic.jpg 图片介绍 %&#125;</span><br></pre></td></tr></table></figure><h2 id="多选框（任务列表）"><a href="#多选框（任务列表）" class="headerlink" title="多选框（任务列表）"></a>多选框（任务列表）</h2><p>-[ ] 文字—–代表没有选中的复选框</p><p>-[x] 文字——代表选中的复选框</p><p>-[x] 数学</p><p>-[ ] 英语</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-[空格]空格 文字—–代表没有选中的复选框</span><br><span class="line"></span><br><span class="line">-[x]空格 文字——代表选中的复选框</span><br><span class="line"></span><br><span class="line">-[x] 数学</span><br><span class="line"></span><br><span class="line">-[ ] 英语</span><br></pre></td></tr></table></figure><h2 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h2><p>加粗：<code>Ctrl+B</code></p><p>斜体：<code>Ctrl+I</code></p><p>字体：<code>Ctrl+数字</code></p><p>下划线：<code>Ctrl+U</code></p><p>返回开头：<code>Ctrl+Home</code></p><p>返回结尾：<code>Ctrl+End</code></p><p>生成表格：<code>Ctrl+T</code></p><p>创建链接：<code>Ctrl+K</code></p><hr><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p><a href="http://blog.csdn.net/zhangruishi/article/details/70768923#%E9%93%BE%E6%8E%A5%E8%A1%A8%E7%A4%BA" target="_blank" rel="noopener">Typora学习笔记 - CSDN博客</a></p><p><a href="https://www.jianshu.com/p/82e730892d42" target="_blank" rel="noopener">Markdown的常用语法(个人总结) - 简书</a></p><p><a href="https://yanyinhong.github.io/2017/05/02/How-to-insert-image-in-hexo-post/" target="_blank" rel="noopener">Hexo博客搭建之在文章中插入图片</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;字体&quot;&gt;&lt;a href=&quot;#字体&quot; class=&quot;headerlink&quot; title=&quot;字体&quot;&gt;&lt;/a&gt;字体&lt;/h2&gt;&lt;p&gt;&lt;em&gt;斜体&lt;/em&gt; &lt;code&gt;* *&lt;/code&gt;&lt;br&gt;&lt;strong&gt;加粗&lt;/strong&gt; &lt;code&gt;** **&lt;/code&gt; 或者&lt;code&gt;__ __&lt;/code&gt;&lt;br&gt;&lt;u&gt;下划线&lt;/u&gt; &lt;code&gt;&amp;lt;u&amp;gt; &amp;lt;/u&amp;gt;&lt;/code&gt;&lt;br&gt;&lt;del&gt;删除线&lt;/del&gt; &lt;code&gt;~~ ~~&lt;/code&gt;&lt;br&gt;代码块&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;print(&lt;span class=&quot;string&quot;&gt;&#39;hello world!&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 &lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;​&lt;span class=&quot;code&quot;&gt;```语言&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;balabala&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="学习" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Typora" scheme="http://yoursite.com/tags/Typora/"/>
    
      <category term="Markdown" scheme="http://yoursite.com/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>重庆森林</title>
    <link href="http://yoursite.com/2018/01/30/%E9%87%8D%E5%BA%86%E6%A3%AE%E6%9E%97/"/>
    <id>http://yoursite.com/2018/01/30/重庆森林/</id>
    <published>2018-01-30T08:24:49.000Z</published>
    <updated>2018-07-10T06:11:00.282Z</updated>
    
    <content type="html"><![CDATA[<p>​    <em>“发胖的肥皂，流泪的毛巾 和30个凤梨罐头。”</em></p><img src="/2018/01/30/重庆森林/wangfei.jpg" class="[王靖雯]"><a id="more"></a><h2 id="人的一生啊"><a href="#人的一生啊" class="headerlink" title="人的一生啊"></a>人的一生啊</h2><p>人的一生就是无数经历 感谢那些让你拥有经历的人 无论经历是好是坏结果是悲是喜 它会是人生中最珍贵的东西 为什么很多时候一些作品映入眼帘却毫无头绪 想想其实道理很简单 缺少阅历 缺少经历 缺少积累 一旦你的大脑中有类似的记忆 作品往往触发这些记忆 所谓感同身受 这就是经历的宝贵之处 而它是不可能用物质或者任何东西去换 去买 所以啊 人越是成长越是要学会感恩 不光光是对那些帮助过你的人 还有那些带给你经历的人 </p><h2 id="人与人之间"><a href="#人与人之间" class="headerlink" title="人与人之间"></a>人与人之间</h2><p>我们每个人其实一直都在潜移默化地改变 没有改变永远都是相对而言罢了 这个世界 那些你身边的人 都是你自己化学反应的催化剂 而你也是他们的催化剂 人与人之间往往就是这样一个微妙的关系 如同王吉民老师说的 ‘恋爱的过程就是两个互相学习’  到最后往往对方都会慢慢变成自己的模样或者自己喜欢的样子 </p><h2 id="重庆的森林"><a href="#重庆的森林" class="headerlink" title="重庆的森林"></a>重庆的森林</h2><p>当然多愁善感没人能避免 发胖的肥皂和流泪的毛巾 30个凤梨罐头 人容易被感情驱使 这是人最有趣的特点了吧<br>重庆森林每个阶段都会产生每种感受 就像我上面说的 经历决定感受 情感产生经历 这就是人生 </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;​    &lt;em&gt;“发胖的肥皂，流泪的毛巾 和30个凤梨罐头。”&lt;/em&gt;&lt;/p&gt;
&lt;img src=&quot;/2018/01/30/重庆森林/wangfei.jpg&quot; class=&quot;[王靖雯]&quot;&gt;
    
    </summary>
    
      <category term="生活" scheme="http://yoursite.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="电影" scheme="http://yoursite.com/tags/%E7%94%B5%E5%BD%B1/"/>
    
  </entry>
  
</feed>
